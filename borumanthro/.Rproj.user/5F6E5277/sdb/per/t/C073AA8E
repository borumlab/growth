{
    "contents" : "#' Anthropometric Graph\n#'\n#' This function creates a clinical anthropometric graph.\n\n#' @param finaltable Final anthropometric table made from calculate_anthro function.\n#' @keywords anthropometric graph\n#' @export\n#' @examples\n#' anthrograph()\n\n\n\n\n#anthrograph function\n\nanthrograph <- function(finaltable) {\n\n\n  #Anthropometric GRAPH\n\n  first <- unique(Demographics.Identified[Demographics.Identified$MRNUMBER==finaltable$MRNUMBER[1],colnames(Demographics.Identified)==\"FIRST\"])\n  last <- unique(Demographics.Identified[Demographics.Identified$MRNUMBER==finaltable$MRNUMBER[1],colnames(Demographics.Identified)==\"LAST\"])\n\n\n  #Anthropometric GRAPH\n  #Graph is different depending on if patient is naive or experienced\n  naive <- ifelse(Demographics.Identified$STRATA[1] == \"N\", TRUE, FALSE)\n\n\n  if (naive == TRUE) {\n    graphdata <- finaltable[finaltable$SOURCE==1 & finaltable$DAY_TYPE!=3,]\n  } else if (naive == FALSE) {\n    before <- finaltable$DATE<Demographics.Identified$PKT_PROSPECTIVE_DATE\n    graphdata1 <- finaltable[before,]\n    graphdata1 <- graphdata1[graphdata1$SOURCE==2,]\n    after <- (finaltable$DATE)>=(Demographics.Identified$PKT_PROSPECTIVE_DATE)\n    graphdata2 <- finaltable[after,]\n    graphdata2 <- graphdata2[graphdata2$SOURCE==1,]\n    graphdata <- rbind(graphdata1, graphdata2)\n    graphdata <- graphdata[graphdata$DAY_TYPE!=3,]\n\n  }\n\n\n  AGE <- graphdata$AGE\n\n  HT_Z_SCORE <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_HT_Z_DAY, ifelse(AGE < 2, graphdata$WHO_HT_Z_DAY, graphdata$NHANES_HT_Z_DAY))\n  WT_Z_SCORE <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_WT_Z_DAY, ifelse(AGE < 2, graphdata$WHO_WT_Z_DAY, graphdata$NHANES_WT_Z_DAY))\n  BMI_Z_SCORE <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_BMI_Z_DAY, ifelse(AGE < 2, graphdata$WHO_BMI_Z_DAY, graphdata$NHANES_BMI_Z_DAY))\n\n  HT_PCTL <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_HT_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_HT_PCTL_DAY, graphdata$NHANES_HT_PCTL_DAY))\n  WT_PCTL <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_WT_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_WT_PCTL_DAY, graphdata$NHANES_WT_PCTL_DAY))\n  BMI_PCTL <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_BMI_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_BMI_PCTL_DAY, graphdata$NHANES_BMI_PCTL_DAY))\n\n  #for patients whose age is 20 but greater than 240 months, using NHANES for these patients\n  if (anyNA(HT_Z_SCORE) == TRUE ) {\n    HT_Z_SCORE <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_HT_Z_DAY, ifelse(AGE < 2, graphdata$WHO_HT_Z_DAY, graphdata$NHANES_HT_Z_DAY))\n  }\n\n  if (anyNA(WT_Z_SCORE) == TRUE) {\n    WT_Z_SCORE <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_WT_Z_DAY, ifelse(AGE < 2, graphdata$WHO_WT_Z_DAY, graphdata$NHANES_WT_Z_DAY))\n  }\n\n  if (anyNA(BMI_Z_SCORE) == TRUE) {\n    BMI_Z_SCORE <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_BMI_Z_DAY, ifelse(AGE < 2, graphdata$WHO_BMI_Z_DAY, graphdata$NHANES_BMI_Z_DAY))\n  }\n\n  if (anyNA(HT_PCTL) == TRUE ) {\n    HT_PCTL <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_HT_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_HT_PCTL_DAY, graphdata$NHANES_HT_PCTL_DAY))\n  }\n\n  if (anyNA(WT_PCTL) == TRUE) {\n    WT_PCTL <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_WT_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_WT_PCTL_DAY, graphdata$NHANES_WT_PCTL_DAY))\n  }\n\n  if (anyNA(BMI_PCTL) == TRUE) {\n    BMI_PCTL <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_BMI_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_BMI_PCTL_DAY, graphdata$NHANES_BMI_PCTL_DAY))\n  }\n\n  #if graphdata has at least 2 rows, graph the data\n  if ((nrow(graphdata) >= 2) == TRUE) {\n\n    #To see what values are being graphed:\n    DATE <- graphdata$DATE\n    MRNUMBER <- finaltable$MRNUMBER[1:dim(graphdata)[1]]\n    data1 <- cbind.data.frame(DATE, HT_Z_SCORE, WT_Z_SCORE, BMI_Z_SCORE)\n    data2 <- cbind.data.frame(MRNUMBER, DATE, AGE, HT_Z_SCORE, WT_Z_SCORE, BMI_Z_SCORE, HT_PCTL, WT_PCTL, BMI_PCTL)\n\n\n    setwd(directory)\n\n    print(paste(\"Saving \",gsub(\" \",\"\",paste(patient,\"_ANTHROPOMETRICS_GRAPH_VALUES.xlsx\")),\"in directory\",getwd()))\n\n\n    #Creating output table:\n    xlsx <- \"ANTHROPOMETRICS_GRAPH_VALUES.xlsx\"\n    xlsx <- gsub(\" \",\"\", paste(patient,\"_\", xlsx))\n    write.xlsx2(data2,file=xlsx,row.names=FALSE, showNA=FALSE)\n\n\n    #for y-axis labels\n    z <- c(data1$HT_Z_SCORE, data1$WT_Z_SCORE, data1$BMI_Z_SCORE)\n    z1 <- floor((min(z))/0.5)*0.5\n    z2 <- ceiling((max(z))/0.5)*0.5\n\n    datebreaks <- seq.Date(min(DATE), max(DATE), length.out=8)\n\n\n    string <- paste(first,gsub(\" \",\"\",paste(last,\":\")),\"Anthropometric Z-scores\")\n\n\n    p <- ggplot(data1, aes(x=DATE))\n    anthrograph <- p + geom_line(aes(y=HT_Z_SCORE, colour=\"Height Z-score\"), size=1.5) +\n      geom_point(aes(y=HT_Z_SCORE, shape=\"Height Z-score\", color=\"Height Z-score\"), size=5) +\n      geom_line(aes(y=WT_Z_SCORE, colour=\"Weight Z-score\"), size=1.5) +\n      geom_point(aes(y=WT_Z_SCORE, shape=\"Weight Z-score\", color=\"Weight Z-score\"), size=4) +\n      geom_line(aes(y=BMI_Z_SCORE, colour=\"BMI Z-score\"), size=1.5) +\n      geom_point(aes(y=BMI_Z_SCORE, shape=\"BMI Z-score\", color=\"BMI Z-score\"), size=4) +\n      xlab(\"Date\") +\n      ylab(\"Z-score\") +\n      ggtitle(string) +\n      geom_hline(yintercept=seq(z1, z2, by=0.5)) +\n      scale_y_continuous(breaks=seq(z1, z2, by=0.5)) +\n      scale_x_date(breaks=datebreaks, date_labels= \"%m/%d/%y\") +\n      theme_bw() +\n      theme(axis.text.x = element_text(size=11),\n            axis.title.x = element_text(size=12),\n            axis.text.y = element_text(size=11),\n            axis.title.y = element_text(size=12),\n            title = element_text(size=12),\n            legend.position=\"bottom\",\n            legend.background=element_rect(fill=\"white\", colour=\"black\"),\n            legend.text=element_text(size=11),\n            legend.key.width=unit(2, \"line\")) +\n      scale_colour_manual(name = \"\", values=c(\"Height Z-score\" = \"orange\", \"Weight Z-score\"=\"purple\", \"BMI Z-score\" = \"green3\")) +\n      scale_shape_manual(name = \"\", values=c(\"Height Z-score\" = 18, \"Weight Z-score\"=15, \"BMI Z-score\"=17))\n\n    setwd(directory)\n\n    print(paste(\"Saving anthropometric clinical graph as\",gsub(\" \",\"\",paste(patient,\"_ANTHROPOMETRICS_GRAPH.png\")),\"in directory\",getwd()))\n\n\n    #save in patient folder, need to fix title\n    png <- \"ANTHROPOMETRICS_GRAPH.png\"\n    png <- gsub(\" \",\"\", paste(patient,\"_\", png))\n    ggsave(anthrograph, file=png, height=4.5, width=6.61, units='in', dpi=600)\n\n  } else if ((nrow(graphdata) >= 2) == FALSE)\n    print(paste(\"There is not enough data to graph\"))\n\n}\n",
    "created" : 1472492517643.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4024754981",
    "id" : "C073AA8E",
    "lastKnownWriteTime" : 1472216893,
    "path" : "G:/MySQL Database/Anthropometrics/Anthropometrics R Package/borumanthro/R/anthrograph function.R",
    "project_path" : "R/anthrograph function.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}