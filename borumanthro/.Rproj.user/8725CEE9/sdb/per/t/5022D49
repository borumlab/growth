{
    "contents" : "#' Upload to database\n#'\n#' This function allow you to create an anthropometric clinical graph.\n#' @param finaltable\n#' @keywords anthrograph\n#' @import ggplot2\n#function to upload anthros into MySQL\n#Anthropometric GRAPH\n#Graph is different depending on if patient is naive or experienced\nanthrograph <- function(finaltable){\n\n  if (!require(\"ggplot2\")) {\n    install.packages(\"ggplot2\")\n  }\n  library(ggplot2)\n\n  first <- unique(Demographics.Identified[Demographics.Identified$MRNUMBER==finaltable$MRNUMBER[1],colnames(Demographics.Identified)==\"FIRST\"])\n  last <- unique(Demographics.Identified[Demographics.Identified$MRNUMBER==finaltable$MRNUMBER[1],colnames(Demographics.Identified)==\"LAST\"])\nnaive <- ifelse(Demographics.Identified$STRATA[1] == \"N\", TRUE, FALSE)\n\n\nif (naive == TRUE) {\n  graphdata <- finaltable[finaltable$SOURCE==1 & finaltable$DAY_TYPE!=3,]\n} else if (naive == FALSE) {\n  before <- finaltable$DATE<Demographics.Identified$PKT_PROSPECTIVE_DATE\n  graphdata1 <- finaltable[before,]\n  graphdata1 <- graphdata1[graphdata1$SOURCE==2,]\n  after <- (finaltable$DATE)>=(Demographics.Identified$PKT_PROSPECTIVE_DATE)\n  graphdata2 <- finaltable[after,]\n  graphdata2 <- graphdata2[graphdata2$SOURCE==1,]\n  graphdata <- rbind(graphdata1, graphdata2)\n  graphdata <- graphdata[graphdata$DAY_TYPE!=3,]\n\n}\n\nif (nrow(graphdata) != 0) {\n\nAGE <- graphdata$AGE\n\nHT_Z_SCORE <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_HT_Z_DAY, ifelse(AGE < 2, graphdata$WHO_HT_Z_DAY, graphdata$NHANES_HT_Z_DAY))\nWT_Z_SCORE <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_WT_Z_DAY, ifelse(AGE < 2, graphdata$WHO_WT_Z_DAY, graphdata$NHANES_WT_Z_DAY))\nBMI_Z_SCORE <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_BMI_Z_DAY, ifelse(AGE < 2, graphdata$WHO_BMI_Z_DAY, graphdata$NHANES_BMI_Z_DAY))\n\nHT_PCTL <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_HT_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_HT_PCTL_DAY, graphdata$NHANES_HT_PCTL_DAY))\nWT_PCTL <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_WT_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_WT_PCTL_DAY, graphdata$NHANES_WT_PCTL_DAY))\nBMI_PCTL <- ifelse(AGE >= 2 & AGE <= 20, graphdata$CDC_BMI_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_BMI_PCTL_DAY, graphdata$NHANES_BMI_PCTL_DAY))\n\n#for patients whose age is 20 but greater than 240 months, using NHANES for these patients\nif (anyNA(HT_Z_SCORE) == TRUE ) {\n  HT_Z_SCORE <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_HT_Z_DAY, ifelse(AGE < 2, graphdata$WHO_HT_Z_DAY, graphdata$NHANES_HT_Z_DAY))\n}\n\nif (anyNA(WT_Z_SCORE) == TRUE) {\n  WT_Z_SCORE <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_WT_Z_DAY, ifelse(AGE < 2, graphdata$WHO_WT_Z_DAY, graphdata$NHANES_WT_Z_DAY))\n}\n\nif (anyNA(BMI_Z_SCORE) == TRUE) {\n  BMI_Z_SCORE <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_BMI_Z_DAY, ifelse(AGE < 2, graphdata$WHO_BMI_Z_DAY, graphdata$NHANES_BMI_Z_DAY))\n}\n\nif (anyNA(HT_PCTL) == TRUE ) {\n  HT_PCTL <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_HT_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_HT_PCTL_DAY, graphdata$NHANES_HT_PCTL_DAY))\n}\n\nif (anyNA(WT_PCTL) == TRUE) {\n  WT_PCTL <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_WT_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_WT_PCTL_DAY, graphdata$NHANES_WT_PCTL_DAY))\n}\n\nif (anyNA(BMI_PCTL) == TRUE) {\n  BMI_PCTL <- ifelse(AGE >= 2 & AGE < 20, graphdata$CDC_BMI_PCTL_DAY, ifelse(AGE < 2, graphdata$WHO_BMI_PCTL_DAY, graphdata$NHANES_BMI_PCTL_DAY))\n}\n\n\n#To see what values are being graphed:\nDATE <- graphdata$DATE\nMRNUMBER <- finaltable$MRNUMBER[1:dim(graphdata)[1]]\ndata1 <- cbind.data.frame(DATE, HT_Z_SCORE, WT_Z_SCORE, BMI_Z_SCORE)\ndata2 <- cbind.data.frame(MRNUMBER, DATE, AGE, HT_Z_SCORE, WT_Z_SCORE, BMI_Z_SCORE, HT_PCTL, WT_PCTL, BMI_PCTL)\n\n\nsetwd(directory)\n\n#Creating output table:\nxlsx <- \"ANTHROPOMETRICS_GRAPH_VALUES.xlsx\"\nxlsx <- gsub(\" \",\"\", paste(patient,\"_\", xlsx))\nwrite.xlsx2(data2,file=xlsx,row.names=FALSE, showNA=FALSE)\n\ndata1 <- data1[complete.cases(data1),]\n\n#for y-axis labels\nz <- c(data1$HT_Z_SCORE, data1$WT_Z_SCORE, data1$BMI_Z_SCORE)\nz1 <- floor((min(z))/0.5)*0.5\nz2 <- ceiling((max(z))/0.5)*0.5\n\ndatebreaks <- seq.Date(min(DATE), max(DATE), length.out=8)\n\n\nstring <- paste(first,gsub(\" \",\"\",paste(last,\":\")),\"Anthropometric Z-scores\")\n\n\np <- ggplot(data1, aes(x=DATE))\nanthrograph <- p + geom_line(aes(y=HT_Z_SCORE, colour=\"Height Z-score\"), size=1.5) +\n  geom_point(aes(y=HT_Z_SCORE, shape=\"Height Z-score\", color=\"Height Z-score\"), size=5) +\n  geom_line(aes(y=WT_Z_SCORE, colour=\"Weight Z-score\"), size=1.5) +\n  geom_point(aes(y=WT_Z_SCORE, shape=\"Weight Z-score\", color=\"Weight Z-score\"), size=4) +\n  geom_line(aes(y=BMI_Z_SCORE, colour=\"BMI Z-score\"), size=1.5) +\n  geom_point(aes(y=BMI_Z_SCORE, shape=\"BMI Z-score\", color=\"BMI Z-score\"), size=4) +\n  xlab(\"Date\") +\n  ylab(\"Z-score\") +\n  ggtitle(string) +\n  geom_hline(yintercept=seq(z1, z2, by=0.5)) +\n  scale_y_continuous(breaks=seq(z1, z2, by=0.5)) +\n  scale_x_date(breaks=datebreaks, date_labels= \"%m/%d/%y\") +\n  theme_bw() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size=11, colour= \"black\"),\n        axis.title.x = element_text(size=12, colour = \"black\"),\n        axis.text.y = element_text(size=11, colour = \"black\"),\n        axis.title.y = element_text(size=12, colour = \"black\"),\n        legend.position=\"bottom\",\n        legend.background=element_rect(fill=\"white\", colour=\"black\"),\n        legend.text=element_text(size=11),\n        legend.key.width=unit(2, \"line\")) +\n  scale_colour_manual(name = \"\", values=c(\"Height Z-score\" = \"orange\", \"Weight Z-score\"=\"purple\", \"BMI Z-score\" = \"green3\")) +\n  scale_shape_manual(name = \"\", values=c(\"Height Z-score\" = 18, \"Weight Z-score\"=15, \"BMI Z-score\"=17))\n\nsetwd(directory)\n\n#save in patient folder\npng <- \"ANTHROPOMETRICS_GRAPH.png\"\npng <- gsub(\" \",\"\", paste(patient,\"_\", png))\nggsave(anthrograph, file=png, height=4.5, width=6.61, units='in', dpi=600)\n\n}\n}\n\n",
    "created" : 1477331922192.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "910904577",
    "id" : "5022D49",
    "lastKnownWriteTime" : 1481817272,
    "path" : "G:/MySQL Database/Anthropometrics/Anthropometrics R Package/borumanthro/R/anthrograph function.R",
    "project_path" : "R/anthrograph function.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}