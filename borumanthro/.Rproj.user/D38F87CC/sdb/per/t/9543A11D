{
    "collab_server" : "",
    "contents" : "#' Calculate Anthropometrics\n#'\n#' This function allows you to calculate anthropometric calculations, z-scores, and percentiles. It also creates a clinical anthropometric graph.\n#' @keywords anthropometrics\n#' @export\n#' @import RMySQL\n#' @import ggplot2\n#' @import xlsx\n#' @import openxlsx\n#' @examples\n#' calculate_anthro()\n\n\n\n# Purpose - This script will take the anthropometric measurements from the FILA_ANTHROPOMETRICS_SOURCE file\n#           and calculate z-scores and percentiles from the CDC, NHANES, and WHO files. It then interpolates\n#           these values daily.\n#           The script will give you as the user the option to specify the four letter initials signifying\n#           the patient you wish to run this script for, and it will ask for the file path of the source sheet.\n#           When the script finishes, you will be asked if you wish to save a FILA_ANTHROPOMETRICS_REFERENCE and\n#           FILA_ANTHROPOMETRICS_REFERENCE_DAY to double-check the calculate z-scores and percentiles. You will also\n#           be asked if you would like to check for a data flag, and if you would like to upload to MySQL.\n#\n#\n\n\ncalculate_anthro <- function() {\n\n  #making enough memory for R to use for patients with larger data sheets\n  options(java.parameters = \"-Xmx10000m\")\n\n\n  #uploading needed packages\n  library(rJava)\n  library(openxlsx)\n  library(xlsx)\n\n  #input patient's initals\n  print(\"Input the four letters that signify the patient we are doing calculations for\")\n  print(\"Example: FILA\")\n  patient <<- readline(prompt=\"Enter here: \")\n\n #input file path of ANTHROPOMETRIC_SOURCE sheet\n  print(\"Input the directory that you wish to draw this patient's ANTHROPOMETRICS file from\")\n  print(\"Example: C:/Folder_Name/\")\n  directory <<- readline(prompt=\"Enter here: \")\n  setwd(directory)\n\n  data <- \"ANTHROPOMETRICS_SOURCE.xlsx\"\n  data <- gsub(\" \",\"\",paste(patient,\"_\",data))\n  Anthropometrics <- read.xlsx(data,sheet=1,detectDates=TRUE)\n  Anthropometrics <- Anthropometrics[!is.na(Anthropometrics$MRNUMBER),]\n\n\n  #uploading anthropometric references tables\n  reference <- \"G:/MySQL Database/Anthropometrics\"\n  setwd(reference)\n  CDC.References <- read.csv('ANTHROPOMETRICS_CDC_REFERENCES_SOURCE_08012016.txt', header=TRUE, sep=\"\\t\", na.strings=c(\"\",\"NA\"))\n  NHANES.References <- read.csv('ANTHROPOMETRICS_NHANES_REFERENCES_SOURCE_08012016.txt', header=TRUE, sep=\"\\t\", na.strings=c(\"\",\"NA\"))\n  WHO.References <- read.csv('ANTHROPOMETRICS_WHO_REFERENCES_SOURCE_08012016.txt', header=TRUE, sep=\"\\t\", na.strings=c(\"\",\"NA\"))\n\n  #uploading Demographics sheet\n  setwd(\"G:/MySQL Database/Demographics/\")\n  DEMOGRAPHICS_SOURCE <- \"DEMOGRAPHICS_SOURCE.xlsx\"\n  DEMOGRAPHICS_SOURCE <- read.xlsx(DEMOGRAPHICS_SOURCE,sheet=1, detectDates = TRUE)\n  Demographics.Identified <<- DEMOGRAPHICS_SOURCE[which(DEMOGRAPHICS_SOURCE$MRNUMBER==Anthropometrics$MRNUMBER), ]\n\n  #saves in patient's folder\n  setwd(directory)\n\n  print(\"Starting calculations. Please wait...\")\n\n  #Calculating Age to use in equations\n  i=1:dim(Anthropometrics)[1]\n  Bday <- as.Date(Demographics.Identified$DOB, format= \"%m/%d/%Y\") #First convert class from factor to date\n  Date <- as.Date(Anthropometrics$DATE[i], format = \"%m/%d/%Y\")\n  library(lubridate)\n  span <- interval(Bday, Date)\n  AGE <- as.period(span)\n  AGE <- as.numeric(year(AGE))\n  AGE_YEARS <- AGE\n  AGE_MO <- as.period(span, \"months\")\n  AGE_MO <- as.numeric(month(AGE_MO))\n\n\n  #Gender\n  #if patient is male then sex=1, if female sex=0\n  SEX <- ifelse(Demographics.Identified$GENDER[1] == \"M\", 1, 0)\n\n  #BMI\n  BMI <- Anthropometrics$WT/(Anthropometrics$HT/100)^2\n\n  #Upper Arm Muscle Circumference\n  AMC <- Anthropometrics$UAC-(pi*Anthropometrics$TSF/10)\n\n  #Upper Arm Area\n  UAA <- 0.785*((Anthropometrics$UAC/pi)^2)\n\n  #Upper Arm Muscle Area\n  AMA <- ((Anthropometrics$UAC-(pi*Anthropometrics$TSF/10))^2)/12.57\n\n  #Upper Arm Fat Area\n  AFA <- UAA-AMA\n\n  #Visceral Cavity Area\n  VCA <- ((Anthropometrics$UC-(pi*((Anthropometrics$USF/10)+(2*Anthropometrics$SISF/10)+(Anthropometrics$MBSF/10))/4))^2)/(4*pi)\n\n  #Visceral Cavity Area Percentage\n  VC_PCTG <- ((Anthropometrics$UC*10-(pi*((Anthropometrics$USF+2*Anthropometrics$SISF+Anthropometrics$MBSF)/4)))^2/(Anthropometrics$UC*10)^2)*100\n\n  #Impedence\n  Z <- ((Anthropometrics$X^2)+(Anthropometrics$R^2))^0.5\n\n  #Phase Angle\n  P <- (tan(Anthropometrics$X/Anthropometrics$R))*180/pi\n\n  #Arpadi Fat Free Mass\n  ARPADI_FFM <- ((3.474+(0.459*(Anthropometrics$HT^2/Anthropometrics$R))+(0.064*Anthropometrics$WT))/(0.769 -(0.009*AGE)-(0.016*SEX)))\n\n  #Goran Fat Free Mass\n  GORAN_FFM <- ((0.59*((Anthropometrics$HT^2)/Anthropometrics$R))+(0.065*Anthropometrics$WT)+0.04)/(0.769-(0.0025*AGE)-(0.019*SEX))\n\n  #ARPADI_TOTAL_BODY_WATER\n  ARPADI_TBW <- 0.725+((0.475*(Anthropometrics$HT^2))/Anthropometrics$R)+(0.14*Anthropometrics$WT)\n\n  #SCHAEFER_FAT_FREE_MASS\n  SCHAEFER_FFM <- (((0.65)*(Anthropometrics$HT^2))/(Z))+(0.68*AGE)+0.15\n\n  #KOTLER_FAT_FREE_MASS\n  KOTLER_FFM <- (0.88/22.22)*((Anthropometrics$HT^1.97)/(Z^0.49))+0.081*Anthropometrics$WT+0.07\n\n  #BODY_FAT_PERCENTAGE\n  FFM <- ifelse(AGE < 18, FFM <- SCHAEFER_FFM, FFM <- KOTLER_FFM)\n  BODY_FAT_PCTG <- ((Anthropometrics$WT-FFM)/Anthropometrics$WT)*100\n\n\n  #can run below to double check what has been calculated so far\n  #ANTHRO <- cbind(AGE, BMI, AMC, UAA, AMA, AFA, VCA, VC_PCTG, Z, P, ARPADI_FFM, GORAN_FFM, ARPADI_TBW, SCHAEFER_FFM, KOTLER_FFM, BODY_FAT_PCTG)\n\n  #Race for NHANES\n  #if White then Race = 2, if Asian then Race = 2, if African-American then Race = 1, if Hispanic then Race = 2\n  RACE <- if (Demographics.Identified$RACE[1] == \"White\"){RACE <- 2} else if (Demographics.Identified$RACE[1] == \"Asian\"){RACE <- 2}  else if (Demographics.Identified$RACE[1] == \"African-American\"){RACE <- 1} else if (Demographics.Identified$RACE[1] == \"Hispanic\"){RACE <- 2}\n\n  #Gender for NHANES\n  SEX <- ifelse(Demographics.Identified$GENDER[1] == \"M\", 1, 2)\n\n  #newHT\n  HT <- floor(Anthropometrics$HT)\n  HT1 <- HT #for output table\n\n  #NHANES using apply function\n  #using the AGE, SEX, and RACE of the patient, the apply function grabs the appropriate mean and standard deviation from NHANES\n  #in the apply function, age is used as a function of x because age changes in value, while sex and race are fixed values\n\n  MEAN_NHANES_HT <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                              NHANES.References$AGE_YEAR_NHANES_HT_AGE==x &\n                                                                NHANES.References$SEX_NHANES_HT_AGE==SEX &\n                                                                NHANES.References$RACE_NHANES_HT_AGE==RACE,\n                                                              select=c(\"MEAN_NHANES_HT_AGE\"))))\n\n  SD_NHANES_HT <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                            NHANES.References$AGE_YEAR_NHANES_HT_AGE==x &\n                                                              NHANES.References$SEX_NHANES_HT_AGE==SEX &\n                                                              NHANES.References$RACE_NHANES_HT_AGE==RACE,\n                                                            select=c(\"SD_NHANES_HT_AGE\"))))\n\n  MEAN_NHANES_WT <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                              NHANES.References$AGE_YEAR_NHANES_WT_AGE==x &\n                                                                NHANES.References$SEX_NHANES_WT_AGE==SEX &\n                                                                NHANES.References$RACE_NHANES_WT_AGE==RACE,\n                                                              select=c(\"MEAN_NHANES_WT_AGE\"))))\n\n  SD_NHANES_WT <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                            NHANES.References$AGE_YEAR_NHANES_WT_AGE==x &\n                                                              NHANES.References$SEX_NHANES_WT_AGE==SEX &\n                                                              NHANES.References$RACE_NHANES_WT_AGE==RACE,\n                                                            select=c(\"SD_NHANES_WT_AGE\"))))\n\n  MEAN_NHANES_BMI <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                               NHANES.References$AGE_YEAR_NHANES_BMI_AGE==x &\n                                                                 NHANES.References$SEX_NHANES_BMI_AGE==SEX &\n                                                                 NHANES.References$RACE_NHANES_BMI_AGE==RACE,\n                                                               select=c(\"MEAN_NHANES_BMI_AGE\"))))\n\n  SD_NHANES_BMI <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                             NHANES.References$AGE_YEAR_NHANES_BMI_AGE==x &\n                                                               NHANES.References$SEX_NHANES_BMI_AGE==SEX &\n                                                               NHANES.References$RACE_NHANES_BMI_AGE==RACE,\n                                                             select=c(\"SD_NHANES_BMI_AGE\"))))\n\n  MEAN_NHANES_UAC <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                               NHANES.References$AGE_YEAR_NHANES_UAC_AGE==x &\n                                                                 NHANES.References$SEX_NHANES_UAC_AGE==SEX &\n                                                                 NHANES.References$RACE_NHANES_UAC_AGE==RACE,\n                                                               select=c(\"MEAN_NHANES_UAC_AGE\"))))\n\n  SD_NHANES_UAC <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                             NHANES.References$AGE_YEAR_NHANES_UAC_AGE==x &\n                                                               NHANES.References$SEX_NHANES_UAC_AGE==SEX &\n                                                               NHANES.References$RACE_NHANES_UAC_AGE==RACE,\n                                                             select=c(\"SD_NHANES_UAC_AGE\"))))\n\n  MEAN_NHANES_TSF <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                               NHANES.References$AGE_YEAR_NHANES_TSF_AGE==x &\n                                                                 NHANES.References$SEX_NHANES_TSF_AGE==SEX &\n                                                                 NHANES.References$RACE_NHANES_TSF_AGE==RACE,\n                                                               select=c(\"MEAN_NHANES_TSF_AGE\"))))\n\n  SD_NHANES_TSF <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                             NHANES.References$AGE_YEAR_NHANES_TSF_AGE==x &\n                                                               NHANES.References$SEX_NHANES_TSF_AGE==SEX &\n                                                               NHANES.References$RACE_NHANES_TSF_AGE==RACE,\n                                                             select=c(\"SD_NHANES_TSF_AGE\"))))\n\n  MEAN_NHANES_UAA <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                               NHANES.References$AGE_YEAR_NHANES_UAA_AGE==x &\n                                                                 NHANES.References$SEX_NHANES_UAA_AGE==SEX &\n                                                                 NHANES.References$RACE_NHANES_UAA_AGE==RACE,\n                                                               select=c(\"MEAN_NHANES_UAA_AGE\"))))\n\n  SD_NHANES_UAA <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                             NHANES.References$AGE_YEAR_NHANES_UAA_AGE==x &\n                                                               NHANES.References$SEX_NHANES_UAA_AGE==SEX &\n                                                               NHANES.References$RACE_NHANES_UAA_AGE==RACE,\n                                                             select=c(\"SD_NHANES_UAA_AGE\"))))\n\n  MEAN_NHANES_AMA <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                               NHANES.References$AGE_YEAR_NHANES_AMA_AGE==x &\n                                                                 NHANES.References$SEX_NHANES_AMA_AGE==SEX &\n                                                                 NHANES.References$RACE_NHANES_AMA_AGE==RACE,\n                                                               select=c(\"MEAN_NHANES_AMA_AGE\"))))\n\n  SD_NHANES_AMA <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                             NHANES.References$AGE_YEAR_NHANES_AMA_AGE==x &\n                                                               NHANES.References$SEX_NHANES_AMA_AGE==SEX &\n                                                               NHANES.References$RACE_NHANES_AMA_AGE==RACE,\n                                                             select=c(\"SD_NHANES_AMA_AGE\"))))\n\n  MEAN_NHANES_AFA <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                               NHANES.References$AGE_YEAR_NHANES_AFA_AGE==x &\n                                                                 NHANES.References$SEX_NHANES_AFA_AGE==SEX &\n                                                                 NHANES.References$RACE_NHANES_AFA_AGE==RACE,\n                                                               select=c(\"MEAN_NHANES_AFA_AGE\"))))\n\n  SD_NHANES_AFA <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                             NHANES.References$AGE_YEAR_NHANES_AFA_AGE==x &\n                                                               NHANES.References$SEX_NHANES_AFA_AGE==SEX &\n                                                               NHANES.References$RACE_NHANES_AFA_AGE==RACE,\n                                                             select=c(\"SD_NHANES_AFA_AGE\"))))\n\n  MEAN_NHANES_SSF <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                               NHANES.References$AGE_YEAR_NHANES_SSSF_AGE==x &\n                                                                 NHANES.References$SEX_NHANES_SSSF_AGE==SEX &\n                                                                 NHANES.References$RACE_NHANES_SSSF_AGE==RACE,\n                                                               select=c(\"MEAN_NHANES_SSSF_AGE\"))))\n\n  SD_NHANES_SSF <- as.numeric(sapply(AGE, function(x) subset(NHANES.References,\n                                                             NHANES.References$AGE_YEAR_NHANES_SSSF_AGE==x &\n                                                               NHANES.References$SEX_NHANES_SSSF_AGE==SEX &\n                                                               NHANES.References$RACE_NHANES_SSSF_AGE==RACE,\n                                                             select=c(\"SD_NHANES_SSSF_AGE\"))))\n\n\n\n  #NHANES WT FOR HT\n  #creating empty data sets with the appropriate length to fill\n  MEAN_NHANES_WT_FOR_HT <- rep(NA,length(AGE))\n  SD_NHANES_WT_FOR_HT <- rep(NA,length(AGE))\n\n  #find appropriate references for NHANES weight for height based on age, race, sex, and height\n  num <- which((AGE < 12 & AGE >=2 & SEX==1) == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT1==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT1==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT1==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT1\"))))\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT1==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT1==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT1==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT1\"))))\n\n#############################\n  num <- which((AGE >= 12 & AGE < 18 & SEX==1) == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT2==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT2==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT2==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT2\"))))\n\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT2==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT2==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT2==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT2\"))))\n#############################\n  num <- which((AGE >= 18 & AGE < 75) == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT3==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT3==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT3==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT3\"))))\n\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT3==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT3==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT3==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT3\"))))\n\n#############################\n  num <- which((AGE < 11 & AGE >= 2 & SEX == 2)  == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT1==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT1==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT1==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT1\"))))\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT1==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT1==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT1==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT1\"))))\n\n#############################\n  num <- which((AGE >=11 & AGE < 18 & SEX==2) == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT2==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT2==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT2==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT2\"))))\n\n\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT2==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT2==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT2==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT2\"))))\n###########################\n\n\n  #NHANES UC (waist circumference)\n  #redefining race for NHANES\n  RACE <- if (Demographics.Identified$RACE[1] == \"White\"){RACE <- 2} else if (Demographics.Identified$RACE[1] == \"Asian\"){RACE <- 2}  else if (Demographics.Identified$RACE[1] == \"African-American\"){RACE <- 1} else if (Demographics.Identified$RACE[1] == \"Hispanic\"){RACE <- 3}\n  MEAN_NHANES_UC <- rep(NA,length(AGE))\n  SD_NHANES_UC <- rep(NA,length(AGE))\n  AGE_UC <- ifelse(AGE <= 4 | AGE >= 19, AGE, AGE_MO)\n  a <- which((AGE <= 4 | AGE >= 19) == TRUE)\n  MEAN_NHANES_UC[a] <- as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                       NHANES.References$AGE_YEAR_NHANES_UC_AGE==x &\n                                                                         NHANES.References$SEX_NHANES_UC_AGE==SEX &\n                                                                         NHANES.References$RACE_NHANES_UC_AGE==RACE,\n                                                                       select=c(\"MEAN_NHANES_UC_AGE\"))))\n\n\n  SD_NHANES_UC[a] <- as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                     NHANES.References$AGE_YEAR_NHANES_UC_AGE==x &\n                                                                       NHANES.References$SEX_NHANES_UC_AGE==SEX &\n                                                                       NHANES.References$RACE_NHANES_UC_AGE==RACE,\n                                                                     select=c(\"SD_NHANES_UC_AGE\"))))\n\n  L_NHANES_UC <- rep(NA,length(AGE))\n  M_NHANES_UC <- rep(NA,length(AGE))\n  S_NHANES_UC <- rep(NA,length(AGE))\n  a <- which((AGE <= 4 | AGE >= 19) == FALSE)\n  L_NHANES_UC[a] <- as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                    NHANES.References$AGE_MO_NHANES_UC_AGE==x &\n                                                                      NHANES.References$SEX_NHANES_UC_AGE2==SEX,\n                                                                    select=c(\"L_NHANES_UC\"))))\n\n  M_NHANES_UC[a] <- as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                    NHANES.References$AGE_MO_NHANES_UC_AGE==x &\n                                                                      NHANES.References$SEX_NHANES_UC_AGE2==SEX,\n                                                                    select=c(\"M_NHANES_UC\"))))\n\n  S_NHANES_UC[a] <-  as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                     NHANES.References$AGE_MO_NHANES_UC_AGE==x &\n                                                                       NHANES.References$SEX_NHANES_UC_AGE2==SEX,\n                                                                     select=c(\"S_NHANES_UC\"))))\n\n\n\n\n  #table2 <- cbind(AGE, MEAN_NHANES_SSF, SD_NHANES_SSF, MEAN_NHANES_AFA, SD_NHANES_AFA, MEAN_NHANES_AMA, SD_NHANES_AMA, MEAN_NHANES_BMI, SD_NHANES_BMI, MEAN_NHANES_HT, SD_NHANES_HT, MEAN_NHANES_TSF, SD_NHANES_TSF, MEAN_NHANES_UAC, SD_NHANES_UAC, MEAN_NHANES_UAA, SD_NHANES_UAC, MEAN_NHANES_UC, SD_NHANES_UC, MEAN_NHANES_WT, SD_NHANES_WT, MEAN_NHANES_WT_FOR_HT, SD_NHANES_WT_FOR_HT)\n\n\n  #NHANES Percentiles and Z scores\n\n  #NHANES_HEIGHT_Z_SCORE\n  NHANES_HT_Z <- (Anthropometrics$HT-MEAN_NHANES_HT)/SD_NHANES_HT\n\n  #NHANES_HEIGHT_PERCENTILE\n  NHANES_HT_PCTL <- (pnorm(NHANES_HT_Z))*100\n\n  #NHANES_WEIGHT_Z_SCORE\n  NHANES_WT_Z <- (Anthropometrics$WT-MEAN_NHANES_WT)/SD_NHANES_WT\n\n  #NHANES_WEIGHT_PERCENTILE\n  NHANES_WT_PCTL <- (pnorm(NHANES_WT_Z))*100\n\n  #NHANES_BMI_Z_SCORE\n  NHANES_BMI_Z <- (BMI-MEAN_NHANES_BMI)/SD_NHANES_BMI\n\n  #NHANES_BMI_PERCENTILE\n  NHANES_BMI_PCTL <- (pnorm(NHANES_BMI_Z))*100\n\n  #NHANES_SUBSCAPULAR_SKINFOLD_Z_SCORE\n  NHANES_SSF_Z <- (Anthropometrics$SSF-MEAN_NHANES_SSF)/SD_NHANES_SSF\n\n  #NHANES_SUBSCAPULAR_SKINFOLD_PERCENTILE\n  NHANES_SSF_PCTL<- (pnorm(NHANES_SSF_Z))*100\n\n  #NHANES_TRICEPS_SKINFOLD_Z_SCORE\n  NHANES_TSF_Z <- (Anthropometrics$TSF-MEAN_NHANES_TSF)/SD_NHANES_TSF\n\n  #NHANES_TRICEPS_SKINFOLD_PERCENTILE\n  NHANES_TSF_PCTL <- (pnorm(NHANES_TSF_Z))*100\n\n  #NHANES_UPPER_ARM_AREA_Z_SCORE\n  NHANES_UAA_Z <- (UAA-MEAN_NHANES_UAA)/SD_NHANES_UAA\n\n  #NHANES_UPPER_ARM_AREA_PERCENTILE\n  NHANES_UAA_PCTL <- (pnorm(NHANES_UAA_Z))*100\n\n  #NHANES_UPPER_ARM_CIRCUMFERANCE_Z_SCORE\n  NHANES_UAC_Z <- (Anthropometrics$UAC-MEAN_NHANES_UAC)/SD_NHANES_UAC\n\n  #NHANES_UPPER_ARM_CIRCUMFERANCE__PERCENTILE\n  NHANES_UAC_PCTL <- (pnorm(NHANES_UAC_Z))*100\n\n  #NHANES_UPPER_ARM_FAT_AREA_Z_SCORE\n  NHANES_AFA_Z <- (AFA-MEAN_NHANES_AFA)/SD_NHANES_AFA\n\n  #NHANES_UPPER_ARM_FAT_AREA_PERCENTILE\n  NHANES_AFA_PCTL <- (pnorm(NHANES_AFA_Z))*100\n\n  #NHANES_UPPER_ARM_MUSCLE_AREA_Z_SCORE\n  NHANES_AMA_Z <- (AMA-MEAN_NHANES_AMA)/SD_NHANES_AMA\n\n  #NHANES_UPPER_ARM_MUSCLE_AREA_PERCENTILE\n  NHANES_AMA_PCTL <- (pnorm(NHANES_AMA_Z))*100\n\n  #NHANES_WAIST_CIRCUMFERENCE_Z_SCORE\n  NHANES_UC_Z1 <- (((Anthropometrics$UC/M_NHANES_UC)^L_NHANES_UC)-1)/(L_NHANES_UC*S_NHANES_UC)\n  NHANES_UC_Z2 <- (Anthropometrics$UC-MEAN_NHANES_UC)/SD_NHANES_UC\n  NHANES_UC_Z1[is.na(NHANES_UC_Z1)] <- \" \"\n  NHANES_UC_Z2[is.na(NHANES_UC_Z2)] <- \" \"\n  NHANES_UC_Z <- as.numeric(paste(NHANES_UC_Z1, NHANES_UC_Z2))\n\n  #NHANES_WAIST_CIRCUMFERENCE_PERCENTILE\n  NHANES_UC_PCTL <- (pnorm(NHANES_UC_Z))*100\n\n  #NHANES_WEIGHT_FOR_HEIGHT_Z_SCORE\n\n  NHANES_WT_HT_Z <- (Anthropometrics$WT-MEAN_NHANES_WT_FOR_HT)/SD_NHANES_WT_FOR_HT\n\n\n  #NHANES_WEIGHT_FOR_HEIGHT_PERCENTILE\n  NHANES_WT_HT_PCTL <- (pnorm(NHANES_WT_HT_Z))*100\n\n  #NHANES_Z_AND_PCTL <- cbind(NHANES_HT_PCTL, NHANES_HT_Z, NHANES_WT_PCTL, NHANES_WT_Z, NHANES_BMI_PCTL, NHANES_BMI_Z, NHANES_UAC_PCTL, NHANES_UAC_Z, NHANES_TSF_PCTL, NHANES_TSF_Z, NHANES_UAA_PCTL, NHANES_UAA_Z, NHANES_AMA_PCTL, NHANES_AMA_Z, NHANES_AFA_PCTL, NHANES_AFA_Z, NHANES_SSF_PCTL, NHANES_SSF_Z, NHANES_UC_PCTL, NHANES_UC_Z, NHANES_WT_HT_Z, NHANES_WT_HT_PCTL)\n\n  #CDC\n  #same SEX as NHANES, need to calculate Age in months\n  i=1:dim(Anthropometrics)[1]\n  Bday <- as.Date(Demographics.Identified$DOB[1], format= \"%m/%d/%Y\") #First convert classes from factor to date\n  Date <- as.Date(Anthropometrics$DATE[i], format = \"%m/%d/%Y\")\n  span <- interval(Bday, Date)\n  AGE <- as.period(span, \"months\")\n  AGE <- as.numeric(month(AGE))\n  #to remove unwanted variables\n  rm(i, Bday, span)\n\n\n  #CDC using apply function\n\n  L_CDC_WT <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                        CDC.References$AGE_MO_CDC_WT_AGE==x &\n                                                          CDC.References$SEX_CDC_WT_AGE==SEX,\n                                                        select=c(\"L_CDC_WT_AGE\"))))\n\n  M_CDC_WT <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                        CDC.References$AGE_MO_CDC_WT_AGE==x &\n                                                          CDC.References$SEX_CDC_WT_AGE==SEX,\n                                                        select=c(\"M_CDC_WT_AGE\"))))\n\n  S_CDC_WT <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                        CDC.References$AGE_MO_CDC_WT_AGE==x &\n                                                          CDC.References$SEX_CDC_WT_AGE==SEX,\n                                                        select=c(\"S_CDC_WT_AGE\"))))\n\n  L_CDC_HT <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                        CDC.References$AGE_MO_CDC_HT_AGE==x &\n                                                          CDC.References$SEX_CDC_HT_AGE==SEX,\n                                                        select=c(\"L_CDC_HT_AGE\"))))\n\n  M_CDC_HT <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                        CDC.References$AGE_MO_CDC_HT_AGE==x &\n                                                          CDC.References$SEX_CDC_HT_AGE==SEX,\n                                                        select=c(\"M_CDC_HT_AGE\"))))\n\n  S_CDC_HT <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                        CDC.References$AGE_MO_CDC_HT_AGE==x &\n                                                          CDC.References$SEX_CDC_HT_AGE==SEX,\n                                                        select=c(\"S_CDC_HT_AGE\"))))\n\n  L_CDC_BMI <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                         CDC.References$AGE_MO_CDC_BMI_AGE==x &\n                                                           CDC.References$SEX_CDC_BMI_AGE==SEX,\n                                                         select=c(\"L_CDC_BMI_AGE\"))))\n\n  M_CDC_BMI <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                         CDC.References$AGE_MO_CDC_BMI_AGE==x &\n                                                           CDC.References$SEX_CDC_BMI_AGE==SEX,\n                                                         select=c(\"M_CDC_BMI_AGE\"))))\n\n  S_CDC_BMI <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                         CDC.References$AGE_MO_CDC_BMI_AGE==x &\n                                                           CDC.References$SEX_CDC_BMI_AGE==SEX,\n                                                         select=c(\"S_CDC_BMI_AGE\"))))\n\n  L_CDC_WT_HT <- as.numeric(sapply(HT, function(x) subset(CDC.References,\n                                                          CDC.References$HEIGHT_CDC_WT_FOR_HT==x &\n                                                            CDC.References$SEX_CDC_WT_FOR_HT ==SEX,\n                                                          select=c(\"L_CDC_WT_FOR_HT\"))))\n\n  M_CDC_WT_HT <- as.numeric(sapply(HT, function(x) subset(CDC.References,\n                                                          CDC.References$HEIGHT_CDC_WT_FOR_HT==x &\n                                                            CDC.References$SEX_CDC_WT_FOR_HT ==SEX,\n                                                          select=c(\"M_CDC_WT_FOR_HT\"))))\n\n  S_CDC_WT_HT <- as.numeric(sapply(HT, function(x) subset(CDC.References,\n                                                          CDC.References$HEIGHT_CDC_WT_FOR_HT==x &\n                                                            CDC.References$SEX_CDC_WT_FOR_HT ==SEX,\n                                                          select=c(\"S_CDC_WT_FOR_HT\"))))\n\n  L_CDC_HC <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                        CDC.References$AGE_MO_CDC_HC_AGE==x &\n                                                          CDC.References$SEX_CDC_HC_AGE==SEX,\n                                                        select=c(\"L_CDC_HC_AGE\"))))\n\n  M_CDC_HC <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                        CDC.References$AGE_MO_CDC_HC_AGE==x &\n                                                          CDC.References$SEX_CDC_HC_AGE==SEX,\n                                                        select=c(\"M_CDC_HC_AGE\"))))\n\n  S_CDC_HC <- as.numeric(sapply(AGE, function(x) subset(CDC.References,\n                                                        CDC.References$AGE_MO_CDC_HC_AGE==x &\n                                                          CDC.References$SEX_CDC_HC_AGE==SEX,\n                                                        select=c(\"S_CDC_HC_AGE\"))))\n\n\n  #CDC_LMS <- cbind(AGE, L_CDC_HT, M_CDC_HT, S_CDC_HT, L_CDC_WT, M_CDC_WT, S_CDC_WT, L_CDC_BMI, M_CDC_BMI, S_CDC_BMI, L_CDC_WT_HT, M_CDC_WT_HT, S_CDC_WT_HT, L_CDC_HC, M_CDC_HC, S_CDC_HC)\n\n  #CDC_WEIGHT_FOR_HEIGHT_Z_SCORE\n  CDC_WT_HT_Z <- (((Anthropometrics$WT/M_CDC_WT_HT)^L_CDC_WT_HT)-1)/(L_CDC_WT_HT*S_CDC_WT_HT)\n\n  #CDC_WEIGHT_FOR_HEIGHT_PERCENTILE\n  CDC_WT_HT_PCTL <- (pnorm(CDC_WT_HT_Z))*100\n\n  #CDC_WEIGHT_Z_SCORE\n  CDC_WT_Z <- (((Anthropometrics$WT/M_CDC_WT)^L_CDC_WT)-1)/(L_CDC_WT*S_CDC_WT)\n\n  #CDC_WEIGHT_PERCENTILE\n  CDC_WT_PCTL <- (pnorm(CDC_WT_Z))*100\n\n  #CDC_BMI_Z_SCORE\n  CDC_BMI_Z <- (((BMI/M_CDC_BMI)^L_CDC_BMI)-1)/(L_CDC_BMI*S_CDC_BMI)\n\n  #CDC_BMI_PERCENTILE\n  CDC_BMI_PCTL <- (pnorm(CDC_BMI_Z))*100\n\n  #CDC_HEAD_CIRCUMFERENCE_Z_SCORE\n  CDC_HC_Z <- (((Anthropometrics$HC/M_CDC_HC)^L_CDC_HC)-1)/(L_CDC_HC*S_CDC_HC)\n\n  #CDC_HEAD_CIRCUMFERENCE_PERCENTILE\n  CDC_HC_PCTL <- (pnorm(CDC_HC_Z))*100\n\n  #CDC_HEIGHT_Z_SCORE\n  CDC_HT_Z <- (((Anthropometrics$HT/M_CDC_HT)^L_CDC_HT)-1)/(L_CDC_HT*S_CDC_HT)\n\n  #CDC_HEIGHT_PERCENTILE\n  CDC_HT_PCTL <- (pnorm(CDC_HT_Z))*100\n\n  CDC_Z_AND_PCTL <- cbind(AGE, CDC_HT_Z, CDC_HT_PCTL, CDC_WT_Z, CDC_WT_PCTL, CDC_BMI_Z, CDC_BMI_PCTL, CDC_WT_HT_Z, CDC_WT_HT_PCTL, CDC_HC_Z, CDC_HC_PCTL)\n\n\n  #same SEX as NHANES, need to calculate Age in days\n  i=1:dim(Anthropometrics)[1]\n  Bday <- as.Date(Demographics.Identified$DOB[1], format= \"%m/%d/%Y\") #First convert classes from factor to date\n  Date <- as.Date(Anthropometrics$DATE[i], format = \"%m/%d/%Y\")\n  span <- interval(Bday, Date)\n  AGE_DOL <- as.period(span, \"days\")\n  AGE_DOL <- as.numeric(day(AGE_DOL))\n  #to remove unwanted variables\n  rm(i, Bday, span)\n\n  #HT_DAY for WHO, because need to have HT to the nearest tenth\n  Anthropometrics$ROUND_HT <- round(Anthropometrics$HT, digits=1)\n\n  #WHO References\n  L_WHO_HC <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                            WHO.References$AGE_DAY_WHO_HC_AGE==x &\n                                                              WHO.References$SEX_WHO_HC_AGE==SEX,\n                                                            select = c(\"L_WHO_HC_AGE\"))))\n\n  M_WHO_HC <- as.numeric(sapply(AGE_DOL, function (x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_HC_AGE==x &\n                                                               WHO.References$SEX_WHO_HC_AGE==SEX,\n                                                             select = c(\"M_WHO_HC_AGE\"))))\n\n  S_WHO_HC <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                            WHO.References$AGE_DAY_WHO_HC_AGE==x &\n                                                              WHO.References$SEX_WHO_HC_AGE==SEX,\n                                                            select = c(\"S_WHO_HC_AGE\"))))\n\n  L_WHO_SSF <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_SSF_AGE==x &\n                                                               WHO.References$SEX_WHO_SSF_AGE==SEX,\n                                                             select=c(\"L_WHO_SSF_AGE\"))))\n\n  M_WHO_SSF <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_SSF_AGE==x &\n                                                               WHO.References$SEX_WHO_SSF_AGE==SEX,\n                                                             select=c(\"M_WHO_SSF_AGE\"))))\n\n\n  S_WHO_SSF <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_SSF_AGE==x &\n                                                               WHO.References$SEX_WHO_SSF_AGE==SEX,\n                                                             select=c(\"S_WHO_SSF_AGE\"))))\n\n  L_WHO_TSF <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_TSF_AGE==x &\n                                                               WHO.References$SEX_WHO_TSF_AGE==SEX,\n                                                             select=c(\"L_WHO_TSF_AGE\"))))\n\n\n  M_WHO_TSF <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_TSF_AGE==x &\n                                                               WHO.References$SEX_WHO_TSF_AGE==SEX,\n                                                             select=c(\"M_WHO_TSF_AGE\"))))\n\n  S_WHO_TSF <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_TSF_AGE==x &\n                                                               WHO.References$SEX_WHO_TSF_AGE==SEX,\n                                                             select=c(\"S_WHO_TSF_AGE\"))))\n\n  L_WHO_UAC <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_UAC_AGE==x &\n                                                               WHO.References$SEX_WHO_UAC_AGE==SEX,\n                                                             select=c(\"L_WHO_UAC_AGE\"))))\n\n  M_WHO_UAC <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_UAC_AGE==x &\n                                                               WHO.References$SEX_WHO_UAC_AGE==SEX,\n                                                             select=c(\"M_WHO_UAC_AGE\"))))\n\n  S_WHO_UAC <- as.numeric(sapply(AGE_DOL, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_UAC_AGE==x &\n                                                               WHO.References$SEX_WHO_UAC_AGE==SEX,\n                                                             select=c(\"S_WHO_UAC_AGE\"))))\n\n\n  L_WHO_WT_HT <- as.numeric(sapply(Anthropometrics$ROUND_HT, function(x) subset(WHO.References,\n                                                                                WHO.References$HEIGHT_WHO_WT_FOR_HT==x &\n                                                                                  WHO.References$SEX_WHO_WT_FOR_HT==SEX,\n                                                                                select=c(\"L_WHO_WT_FOR_HT\"))))\n\n  M_WHO_WT_HT <- as.numeric(sapply(Anthropometrics$ROUND_HT, function(x) subset(WHO.References,\n                                                                                WHO.References$HEIGHT_WHO_WT_FOR_HT==x &\n                                                                                  WHO.References$SEX_WHO_WT_FOR_HT==SEX,\n                                                                                select=c(\"M_WHO_WT_FOR_HT\"))))\n\n\n  S_WHO_WT_HT <- as.numeric(sapply(Anthropometrics$ROUND_HT, function(x) subset(WHO.References,\n                                                                                WHO.References$HEIGHT_WHO_WT_FOR_HT==x &\n                                                                                  WHO.References$SEX_WHO_WT_FOR_HT==SEX,\n                                                                                select=c(\"S_WHO_WT_FOR_HT\"))))\n\n\n  #For WHO parameters which can be calculated in days (0-1856) or months (61+)\n  L_WHO_HT <- rep(NA, length(AGE))\n  M_WHO_HT <- rep(NA, length(AGE))\n  S_WHO_HT <- rep(NA, length(AGE))\n  L_WHO_WT <- rep(NA, length(AGE))\n  M_WHO_WT <- rep(NA, length(AGE))\n  S_WHO_WT <- rep(NA, length(AGE))\n  L_WHO_BMI <- rep(NA, length(AGE))\n  M_WHO_BMI <- rep(NA, length(AGE))\n  S_WHO_BMI <- rep(NA, length(AGE))\n\n  AGE_WHO <- ifelse(AGE_DOL <= 1856 , AGE_DOL, AGE)\n  t <- which((AGE_DOL <= 1856) == TRUE)\n  L_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE2==SEX,\n                                                                  select=c(\"L_WHO_HT_AGE2\"))))\n  M_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE2==SEX,\n                                                                  select=c(\"M_WHO_HT_AGE2\"))))\n  S_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE2==SEX,\n                                                                  select=c(\"S_WHO_HT_AGE2\"))))\n\n  L_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE2==SEX,\n                                                                  select=c(\"L_WHO_WT_AGE2\"))))\n  M_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE2==SEX,\n                                                                  select=c(\"M_WHO_WT_AGE2\"))))\n  S_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE2==SEX,\n                                                                  select=c(\"S_WHO_WT_AGE2\"))))\n\n  L_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_DAY_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE2==SEX,\n                                                                   select=c(\"L_WHO_BMI_AGE2\"))))\n  M_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_DAY_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE2==SEX,\n                                                                   select=c(\"M_WHO_BMI_AGE2\"))))\n  S_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_DAY_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE2==SEX,\n                                                                   select=c(\"S_WHO_BMI_AGE2\"))))\n\n\n  t <- which((AGE_DOL <= 1856)==FALSE)\n  L_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE==SEX,\n                                                                  select=c(\"L_WHO_HT_AGE\"))))\n  M_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE==SEX,\n                                                                  select=c(\"M_WHO_HT_AGE\"))))\n  S_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE==SEX,\n                                                                  select=c(\"S_WHO_HT_AGE\"))))\n\n  L_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE==SEX,\n                                                                  select=c(\"L_WHO_WT_AGE\"))))\n  M_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE==SEX,\n                                                                  select=c(\"M_WHO_WT_AGE\"))))\n  S_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE==SEX,\n                                                                  select=c(\"S_WHO_WT_AGE\"))))\n\n\n  L_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_MO_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE==SEX,\n                                                                   select=c(\"L_WHO_BMI_AGE\"))))\n  M_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_MO_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE==SEX,\n                                                                   select=c(\"M_WHO_BMI_AGE\"))))\n  S_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_MO_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE==SEX,\n                                                                   select=c(\"S_WHO_BMI_AGE\"))))\n\n\n  #WHO_LMS <- cbind(AGE_MO,AGE_DOL,L_WHO_HT, M_WHO_HT, S_WHO_HT,L_WHO_HT2, M_WHO_HT2, S_WHO_HT2, L_WHO_WT, M_WHO_WT, S_WHO_WT,L_WHO_WT2, M_WHO_WT2, S_WHO_WT2, L_WHO_BMI, M_WHO_BMI, S_WHO_BMI,L_WHO_BMI2, M_WHO_BMI2, S_WHO_BMI2, L_WHO_HC, M_WHO_HC, S_WHO_HC, L_WHO_UAC, M_WHO_UAC, S_WHO_UAC, L_WHO_TSF, M_WHO_TSF, S_WHO_TSF, L_WHO_SSF, M_WHO_SSF, S_WHO_SSF, L_WHO_WT_HT, M_WHO_WT_HT, S_WHO_WT_HT)\n\n  #WHO_WEIGHT_Z_SCORE\n  WHO_WT_Z <- (((Anthropometrics$WT/M_WHO_WT)^L_WHO_WT)-1)/(L_WHO_WT*S_WHO_WT)\n\n  #WHO_WEIGHT_PERCENTILE\n  WHO_WT_PCTL <- (pnorm(WHO_WT_Z))*100\n\n  #WHO_BMI_Z_SCORE\n  WHO_BMI_Z <- (((BMI/M_WHO_BMI)^L_WHO_BMI)-1)/(L_WHO_BMI*S_WHO_BMI)\n\n  #WHO_BMI_PERCENTILE\n  WHO_BMI_PCTL <- (pnorm(WHO_BMI_Z))*100\n\n  #WHO_HEAD_CIRCUMFERENCE_Z_SCORE\n  WHO_HC_Z <- (((Anthropometrics$HC/M_WHO_HC)^L_WHO_HC)-1)/(L_WHO_HC*S_WHO_HC)\n\n  #WHO_HEAD_CIRCUMFERENCE_PERCENTILE\n  WHO_HC_PCTL <- (pnorm(WHO_HC_Z))*100\n\n  #WHO_HEIGHT_Z_SCORE\n  WHO_HT_Z <- (((Anthropometrics$HT/M_WHO_HT)^L_WHO_HT)-1)/(L_WHO_HT*S_WHO_HT)\n\n  #WHO_HEIGHT_PERCENTILE\n  WHO_HT_PCTL <- (pnorm(WHO_HT_Z))*100\n\n  #WHO_SUBSCAPULAR_SKINFOLD_Z_SCORE\n  WHO_SSF_Z <- (((Anthropometrics$SSF/M_WHO_SSF)^L_WHO_SSF)-1)/(L_WHO_SSF*S_WHO_SSF)\n\n  #WHO_SUBSCAPULAR_SKINFOLD_PERCENTILE\n  WHO_SSF_PCTL <- (pnorm(WHO_SSF_Z))*100\n\n  #WHO_TRICEPS_SKINFOLD_Z_SCORE\n  WHO_TSF_Z <- (((Anthropometrics$TSF/M_WHO_TSF)^L_WHO_TSF)-1)/(L_WHO_TSF*S_WHO_TSF)\n\n  #WHO_TRICEPS_SKINFOLD_PERCENTILE\n  WHO_TSF_PCTL <- (pnorm(WHO_TSF_Z))*100\n\n  #WHO_UPPER_ARM_CIRCUMFERANCE_Z_SCORE\n  WHO_UAC_Z <- (((Anthropometrics$UAC/M_WHO_UAC)^L_WHO_UAC)-1)/(L_WHO_UAC*S_WHO_UAC)\n\n  #WHO_UPPER_ARM_CIRCUMFERANCE__PERCENTILE\n  WHO_UAC_PCTL <- (pnorm(WHO_UAC_Z))*100\n\n  #WHO_WEIGHT_FOR_HEIGHT_Z_SCORE\n  WHO_WT_HT_Z <- (((Anthropometrics$WT/M_WHO_WT_HT)^L_WHO_WT_HT)-1)/(L_WHO_WT_HT*S_WHO_WT_HT)\n\n  #WHO_WEIGHT_FOR_HEIGHT_PERCENTILE\n  WHO_WT_HT_PCTL <- (pnorm(WHO_WT_HT_Z))*100\n\n  WHO_Z_AND_PCTL <- cbind(WHO_HT_PCTL, WHO_HT_Z, WHO_WT_PCTL, WHO_WT_Z, WHO_BMI_PCTL, WHO_BMI_Z, WHO_WT_HT_PCTL, WHO_WT_HT_Z, WHO_HC_PCTL, WHO_HC_Z, WHO_UAC_PCTL, WHO_UAC_Z, WHO_TSF_PCTL, WHO_TSF_Z, WHO_SSF_PCTL, WHO_SSF_Z)\n\n\n  #Gator Circle\n  GC <- (NHANES_UC_Z* VC_PCTG)/100\n\n  #define column headers for excel sheet\n  MRNUMBER <- Anthropometrics$MRNUMBER\n  DATE <- as.Date(Anthropometrics$DATE, format= \"%m/%d/%Y\")\n  DAY_TYPE <- Anthropometrics$DAY_TYPE\n  SOURCE <- Anthropometrics$SOURCE\n  HT <- Anthropometrics$HT\n  WT <- Anthropometrics$WT\n  HC <- Anthropometrics$HC\n  UAC <- Anthropometrics$UAC\n  TSF <- Anthropometrics$TSF\n  SSF <- Anthropometrics$SSF\n  USF <- Anthropometrics$USF\n  SISF <- Anthropometrics$SISF\n  MBSF <- Anthropometrics$MBSF\n  UC <- Anthropometrics$UC\n  R <- Anthropometrics$R\n  X <- Anthropometrics$X\n  CP_DAY <- Anthropometrics$CP\n  PA_DAY <- Anthropometrics$PA\n  COMMENTS <- Anthropometrics$COMMENTS\n\n  anthrotable <- cbind.data.frame(MRNUMBER, DATE, DAY_TYPE, SOURCE, HT, WT, HC, UAC, TSF, SSF, USF, SISF, MBSF, UC, R, X, CDC_HT_PCTL, CDC_HT_Z, WHO_HT_PCTL, WHO_HT_Z, NHANES_HT_PCTL, NHANES_HT_Z, CDC_WT_PCTL, CDC_WT_Z, WHO_WT_PCTL, WHO_WT_Z, NHANES_WT_PCTL, NHANES_WT_Z, BMI,  CDC_BMI_PCTL, CDC_BMI_Z, WHO_BMI_PCTL, WHO_BMI_Z, NHANES_BMI_PCTL, NHANES_BMI_Z, CDC_WT_HT_PCTL, CDC_WT_HT_Z, WHO_WT_HT_PCTL, WHO_WT_HT_Z, NHANES_WT_HT_PCTL, NHANES_WT_HT_Z, CDC_HC_PCTL, CDC_HC_Z, WHO_HC_PCTL, WHO_HC_Z, WHO_UAC_PCTL, WHO_UAC_Z, NHANES_UAC_PCTL, NHANES_UAC_Z, WHO_TSF_PCTL, WHO_TSF_Z, NHANES_TSF_PCTL, NHANES_TSF_Z, UAA, NHANES_UAA_PCTL, NHANES_UAA_Z, AMC, AMA, NHANES_AMA_PCTL, NHANES_AMA_Z, AFA, NHANES_AFA_PCTL, NHANES_AFA_Z, WHO_SSF_PCTL, WHO_SSF_Z, NHANES_SSF_PCTL, NHANES_SSF_Z, NHANES_UC_PCTL, NHANES_UC_Z, VCA, VC_PCTG, GC, Z, P, ARPADI_FFM, GORAN_FFM, ARPADI_TBW, SCHAEFER_FFM, KOTLER_FFM, BODY_FAT_PCTG, CP_DAY, PA_DAY, COMMENTS)\n  output <- cbind.data.frame(DATE, AGE_YEARS, AGE_MO, AGE_DOL, RACE, SEX, HT1, MEAN_NHANES_SSF, SD_NHANES_SSF, MEAN_NHANES_AFA, SD_NHANES_AFA, MEAN_NHANES_AMA, SD_NHANES_AMA, MEAN_NHANES_BMI, SD_NHANES_BMI, MEAN_NHANES_HT, SD_NHANES_HT, MEAN_NHANES_TSF, SD_NHANES_TSF, MEAN_NHANES_UAC, SD_NHANES_UAC, MEAN_NHANES_UAA, SD_NHANES_UAA, MEAN_NHANES_UC, SD_NHANES_UC, L_NHANES_UC, M_NHANES_UC, S_NHANES_UC, MEAN_NHANES_WT, SD_NHANES_WT, MEAN_NHANES_WT_FOR_HT, SD_NHANES_WT_FOR_HT,\n                             L_CDC_HT, M_CDC_HT, S_CDC_HT, L_CDC_WT, M_CDC_WT, S_CDC_WT, L_CDC_BMI, M_CDC_BMI, S_CDC_BMI, L_CDC_WT_HT, M_CDC_WT_HT, S_CDC_WT_HT, L_CDC_HC, M_CDC_HC, S_CDC_HC,\n                             L_WHO_HT, M_WHO_HT, S_WHO_HT, L_WHO_WT, M_WHO_WT, S_WHO_WT, L_WHO_BMI, M_WHO_BMI, S_WHO_BMI,L_WHO_HC, M_WHO_HC, S_WHO_HC, L_WHO_UAC, M_WHO_UAC, S_WHO_UAC, L_WHO_TSF, M_WHO_TSF, S_WHO_TSF, L_WHO_SSF, M_WHO_SSF, S_WHO_SSF, L_WHO_WT_HT, M_WHO_WT_HT, S_WHO_WT_HT)\n\n\n  print(\"Starting interpolated calculations. Please wait...\")\n\n\n  #Interpolation\n  anthro <- Anthropometrics\n  demo <- Demographics.Identified\n  prodate <- Demographics.Identified$PKT_PROSPECTIVE_DATE\n\n  if (anyNA(Demographics.Identified$STRATA[1]) == FALSE) {\n    naive <- ifelse(Demographics.Identified$STRATA[1] == \"N\", TRUE, FALSE)\n    if (naive == TRUE) {\n      sub <- anthro[anthro$SOURCE!=1,]\n      anthro <- anthro[!(as.numeric(rownames(anthro)) %in% as.numeric(rownames(sub))),]\n    } else if (naive == FALSE) {\n      sub1 <- anthro[anthro$DATE>=prodate & anthro$SOURCE!=1,]\n      sub2 <- anthro[anthro$DATE<prodate & (anthro$SOURCE==3),]\n      anthro <- anthro[!(as.numeric(rownames(anthro)) %in% as.numeric(rownames(sub1))),]\n      anthro <- anthro[!(as.numeric(rownames(anthro)) %in% as.numeric(rownames(sub2))),]\n    }\n  } else if (anyNA(Demographics.Identified$STRATA[1]) == TRUE) {\n    anthro <- Anthropometrics\n  }\n\n  y1 <- as.Date(anthro$DATE[1], format=\"%m/%d/%Y\")\n  y2 <- as.Date(anthro$DATE[length(anthro[,1])], format=\"%m/%d/%Y\")\n  DATE <- seq(y1, y2, by=\"days\")\n\n  z <- length(DATE)\n\n\n  #HT\n  if ((sum(!is.na(anthro$HT)) > 1) == TRUE ) {\n\n    table <- anthro[complete.cases(anthro$HT),]\n    HT <- as.numeric(na.omit(anthro$HT))\n    i <- 1:(length(HT)-1)\n    x1 <- HT[i]\n    x2 <- HT[i+1]\n    diffheight <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal1 <- as.numeric(x, units=\"days\")\n\n    HT_DAY <- c()\n    for (i in seq(length(HT)-1)) {\n      HT_DAY <- c(HT_DAY, ((1:difftotal1[i]/difftotal1[i])*diffheight[i])+x1[i])\n    }\n    HT_DAY <- c(table$HT[1], HT_DAY)\n\n    a <- which(!is.na(anthro$HT))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    HT_DAY <- c(rep(NA, c-1), HT_DAY)\n    length(HT_DAY) <- z\n\n  } else if (all(is.na(anthro$HT)) == TRUE) {\n    HT_DAY <- NA\n    length(HT_DAY) <- z\n  } else if (sum(!is.na(anthro$HT)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$HT == (anthro$HT[!(is.na(anthro$HT))]))])\n    HT_DAY <- c()\n    HT_DAY[a] <- anthro$HT[!(is.na(anthro$HT))]\n    length(HT_DAY) <- z\n\n\n  }\n\n\n  #WT\n  if ((sum(!is.na(anthro$WT)) > 1) == TRUE) {\n\n    table <- anthro[complete.cases(anthro$WT),]\n    y <- as.numeric(na.omit(anthro$WT))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    WT_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      WT_DAY <- c(WT_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    WT_DAY <- c(table$WT[1], WT_DAY)\n\n    a <- which(!is.na(anthro$WT))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    WT_DAY <- c(rep(NA, c-1), WT_DAY)\n    length(WT_DAY) <- z\n\n  }  else if (all(is.na(anthro$WT)) == TRUE) {\n    WT_DAY <- NA\n    length(WT_DAY) <- z\n  } else if (sum(!is.na(anthro$WT)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$WT == (anthro$WT[!(is.na(anthro$WT))]))])\n    WT_DAY <- c()\n    WT_DAY[a] <- anthro$WT[!(is.na(anthro$WT))]\n    length(WT_DAY) <- z\n  }\n\n\n  #HC\n  if ((sum(!is.na(anthro$HC)) > 1) == TRUE) {\n    table <- anthro[complete.cases(anthro$HC),]\n    y <- as.numeric(na.omit(anthro$HC))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    HC_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      HC_DAY <- c(HC_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    HC_DAY <- c(table$HC[1], HC_DAY)\n\n    a <- which(!is.na(anthro$HC))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    HC_DAY <- c(rep(NA, c-1), HC_DAY)\n    length(HC_DAY) <- z\n\n  }  else if (all(is.na(anthro$HC)) == TRUE) {\n    HC_DAY <- NA\n    length(HC_DAY) <- z\n  } else if (sum(!is.na(anthro$HC)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$HC == (anthro$HC[!(is.na(anthro$HC))]))])\n    HC_DAY <- c()\n    HC_DAY[a] <- anthro$HC[!(is.na(anthro$HC))]\n    length(HC_DAY) <- z\n\n\n  }\n\n  #UAC\n\n  if ((sum(!is.na(anthro$UAC)) > 1) == TRUE) {\n\n\n    table <- anthro[complete.cases(anthro$UAC),]\n    y <- as.numeric(na.omit(anthro$UAC))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    UAC_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      UAC_DAY <- c(UAC_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    UAC_DAY <- c(table$UAC[1], UAC_DAY)\n\n    a <- which(!is.na(anthro$UAC))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    UAC_DAY <- c(rep(NA, c-1), UAC_DAY)\n    length(UAC_DAY) <- z\n\n  }else if (all(is.na(anthro$UAC)) == TRUE) {\n    UAC_DAY <- NA\n    length(UAC_DAY) <- z\n  } else if (sum(!is.na(anthro$UAC)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$UAC == (anthro$UAC[!(is.na(anthro$UAC))]))])\n    UAC_DAY <- c()\n    UAC_DAY[a] <- anthro$UAC[!(is.na(anthro$UAC))]\n    length(UAC_DAY) <- z\n  }\n\n  #TSF\n\n  if ((sum(!is.na(anthro$TSF)) > 1) == TRUE) {\n\n    table <- anthro[complete.cases(anthro$TSF),]\n    y <- as.numeric(na.omit(anthro$TSF))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    TSF_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      TSF_DAY <- c(TSF_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    TSF_DAY <- c(table$TSF[1], TSF_DAY)\n\n    a <- which(!is.na(anthro$TSF))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    TSF_DAY <- c(rep(NA, c-1), TSF_DAY)\n    length(TSF_DAY) <- z\n\n\n  } else if (all(is.na(anthro$TSF)) == TRUE) {\n    TSF_DAY <- NA\n    length(TSF_DAY) <- z\n  } else if (sum(!is.na(anthro$TSF)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$TSF == (anthro$TSF[!(is.na(anthro$TSF))]))])\n    TSF_DAY <- c()\n    TSF_DAY[a] <- anthro$TSF[!(is.na(anthro$TSF))]\n    length(TSF_DAY) <- z\n  }\n\n\n  #SSF\n  if ((sum(!is.na(anthro$SSF)) > 1) == TRUE) {\n    table <- anthro[complete.cases(anthro$SSF),]\n    y <- as.numeric(na.omit(anthro$SSF))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    SSF_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      SSF_DAY <- c(SSF_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    SSF_DAY <- c(table$SSF[1], SSF_DAY)\n\n    a <- which(!is.na(anthro$SSF))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    SSF_DAY <- c(rep(NA, c-1), SSF_DAY)\n    length(SSF_DAY) <- z\n\n  } else if (all(is.na(anthro$SSF)) == TRUE) {\n    SSF_DAY <- NA\n    length(SSF_DAY) <- z\n  } else if (sum(!is.na(anthro$SSF)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$SSF == (anthro$SSF[!(is.na(anthro$SSF))]))])\n    SSF_DAY <- c()\n    SSF_DAY[a] <- anthro$SSF[!(is.na(anthro$SSF))]\n    length(SSF_DAY) <- z\n  }\n\n  #USF\n  if ((sum(!is.na(anthro$USF)) > 1) == TRUE) {\n    table <- anthro[complete.cases(anthro$USF),]\n    y <- as.numeric(na.omit(anthro$USF))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    USF_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      USF_DAY <- c(USF_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    USF_DAY <- c(table$USF[1], USF_DAY)\n\n    a <- which(!is.na(anthro$USF))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    USF_DAY <- c(rep(NA, c-1), USF_DAY)\n    length(USF_DAY) <- z\n\n  } else if (all(is.na(anthro$USF)) == TRUE) {\n    USF_DAY <- NA\n    length(USF_DAY) <- z\n  }  else if (sum(!is.na(anthro$USF)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$USF == (anthro$USF[!(is.na(anthro$USF))]))])\n    USF_DAY <- c()\n    USF_DAY[a] <- anthro$USF[!(is.na(anthro$USF))]\n    length(USF_DAY) <- z\n  }\n\n  #SISF\n  if ((sum(!is.na(anthro$SISF)) > 1) == TRUE) {\n    table <- anthro[complete.cases(anthro$SISF),]\n    y <- as.numeric(na.omit(anthro$SISF))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    SISF_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      SISF_DAY <- c(SISF_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    SISF_DAY <- c(table$SISF[1], SISF_DAY)\n\n    a <- which(!is.na(anthro$SISF))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    SISF_DAY <- c(rep(NA, c-1), SISF_DAY)\n    length(SISF_DAY) <- z\n\n  } else if (all(is.na(anthro$SISF)) == TRUE) {\n    SISF_DAY <- NA\n    length(SISF_DAY) <- z\n  } else if (sum(!is.na(anthro$SISF)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$SISF == (anthro$SISF[!(is.na(anthro$SISF))]))])\n    SISF_DAY <- c()\n    SISF_DAY[a] <- anthro$SISF[!(is.na(anthro$SISF))]\n    length(SISF_DAY) <- z\n  }\n\n  #MBSF\n  if ((sum(!is.na(anthro$MBSF)) > 1) == TRUE) {\n    table <- anthro[complete.cases(anthro$MBSF),]\n    y <- as.numeric(na.omit(anthro$MBSF))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    MBSF_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      MBSF_DAY <- c(MBSF_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    MBSF_DAY <- c(table$MBSF[1], MBSF_DAY)\n\n    a <- which(!is.na(anthro$MBSF))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    MBSF_DAY <- c(rep(NA, c-1), MBSF_DAY)\n    length(MBSF_DAY) <- z\n\n  } else if (all(is.na(anthro$MBSF)) == TRUE) {\n    MBSF_DAY <- NA\n    length(MBSF_DAY) <- z\n  } else if (sum(!is.na(anthro$MBSF)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$MBSF == (anthro$MBSF[!(is.na(anthro$MBSF))]))])\n    MBSF_DAY <- c()\n    MBSF_DAY[a] <- anthro$MBSF[!(is.na(anthro$MBSF))]\n    length(MBSF_DAY) <- z\n  }\n\n  #UC\n  if ((sum(!is.na(anthro$UC)) > 1) == TRUE) {\n    table <- anthro[complete.cases(anthro$UC),]\n    y <- as.numeric(na.omit(anthro$UC))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    UC_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      UC_DAY <- c(UC_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    UC_DAY <- c(table$UC[1], UC_DAY)\n\n    a <- which(!is.na(anthro$UC))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    UC_DAY <- c(rep(NA, c-1), UC_DAY)\n    length(UC_DAY) <- z\n\n  } else if (all(is.na(anthro$UC)) == TRUE) {\n    UC_DAY <- NA\n    length(UC_DAY) <- z\n  } else if (sum(!is.na(anthro$UC)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$UC == (anthro$UC[!(is.na(anthro$UC))]))])\n    UC_DAY <- c()\n    UC_DAY[a] <- anthro$UC[!(is.na(anthro$UC))]\n    length(UC_DAY) <- z\n  }\n\n\n  #R\n  if ((sum(!is.na(anthro$R)) > 1) == TRUE) {\n    table <- anthro[complete.cases(anthro$R),]\n    y <- as.numeric(na.omit(anthro$R))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    R_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      R_DAY <- c(R_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    R_DAY <- c(table$R[1], R_DAY)\n\n    a <- which(!is.na(anthro$R))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    R_DAY <- c(rep(NA, c-1), R_DAY)\n    length(R_DAY) <- z\n\n  } else if (all(is.na(anthro$R)) == TRUE) {\n    R_DAY <- NA\n    length(R_DAY) <- z\n  } else if (sum(!is.na(anthro$R)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$R == (anthro$R[!(is.na(anthro$R))]))])\n    R_DAY <- c()\n    R_DAY[a] <- anthro$R[!(is.na(anthro$R))]\n    length(R_DAY) <- z\n  }\n\n  #X\n  if ((sum(!is.na(anthro$X)) > 1) == TRUE) {\n    table <- anthro[complete.cases(anthro$X),]\n    y <- as.numeric(na.omit(anthro$X))\n    i <- 1:(length(y)-1)\n    x1 <- y[i]\n    x2 <- y[i+1]\n    diffx <- (x2 - x1)\n    Date1 <- as.Date(table$DATE[i], format=\"%m/%d/%Y\")\n    Date2 <- as.Date(table$DATE[i+1], format=\"%m/%d/%Y\")\n    x <- Date2 - Date1\n    difftotal <- as.numeric(x, units=\"days\")\n\n    X_DAY <- c()\n    for (i in seq(length(y)-1)) {\n      X_DAY <- c(X_DAY, ((1:difftotal[i]/difftotal[i])*diffx[i])+x1[i])\n    }\n    X_DAY <- c(table$X[1], X_DAY)\n\n    a <- which(!is.na(anthro$X))[1]\n    b <- as.Date(anthro$DATE[a], format=\"%m/%d/%Y\")\n    c <- which(DATE==b)\n    X_DAY <- c(rep(NA, c-1), X_DAY)\n    length(X_DAY) <- z\n\n  } else if (all(is.na(anthro$X)) == TRUE) {\n    X_DAY <- NA\n    length(X_DAY) <- z\n  } else if (sum(!is.na(anthro$X)) == 1) {\n    a <- which(DATE == anthro$DATE[which(anthro$X == (anthro$X[!(is.na(anthro$X))]))])\n    X_DAY <- c()\n    X_DAY[a] <- anthro$X[!(is.na(anthro$X))]\n    length(X_DAY) <- z\n  }\n\n  MRNUMBER <- cbind(rep(unique(anthro$MRNUMBER),z))\n\n  anthro_interpolation <- cbind.data.frame(MRNUMBER, DATE, HT_DAY, WT_DAY, HC_DAY, UAC_DAY, TSF_DAY, SSF_DAY, USF_DAY, SISF_DAY, MBSF_DAY, UC_DAY, R_DAY, X_DAY)\n\n\n  #to use for AGE\n  y1 <- as.Date(anthro$DATE[1], format=\"%m/%d/%Y\")\n  y2 <- as.Date(anthro$DATE[length(anthro[,1])], format=\"%m/%d/%Y\")\n  DATE <- seq(y1, y2, by=\"days\")\n  DATE1 <- DATE #for output table\n\n\n  #Calculating Age to use in equations\n  #right here I'm defining the interpolated graph as 'anthro_interpolated'\n  i=1:dim(anthro_interpolation)[1]\n  Bday <- as.Date(Demographics.Identified$DOB, format= \"%m/%d/%Y\") #First convert classes from factor to date\n  span <- interval(Bday, DATE)\n  AGE_DAY <- as.period(span)\n  AGE_DAY <- as.numeric(year(AGE_DAY))\n  AGE_DAY1 <- AGE_DAY #for output table\n  #to remove unwanted variables\n  AGE_MO <- as.period(span, \"months\")\n  AGE_MO <- as.numeric(month(AGE_MO))\n  span2 <- interval(Bday, DATE+1)\n  AGE_DOL1 <- as.period(span, \"days\")\n  AGE_DOL1 <- as.numeric(day(AGE_DOL1))\n  #below defined to use for final table\n\n\n  #Gender\n  SEX <- ifelse(Demographics.Identified$GENDER[1] == \"M\", 1, 0)\n\n  #BMI\n  BMI_DAY <- WT_DAY/(HT_DAY/100)^2\n\n  #Upper Arm Muscle Circumference\n  AMC_DAY <- UAC_DAY-(pi*TSF_DAY/10)\n\n  #Upper Arm Area\n  UAA_DAY <- 0.785*((UAC_DAY/pi)^2)\n\n  #Upper Arm Muscle Area\n  AMA_DAY <- ((UAC_DAY-(pi*TSF_DAY/10))^2)/12.57\n\n  #Upper Arm Fat Area\n  AFA_DAY <- UAA_DAY-AMA_DAY\n  #this would have to be used after calculating UAA and AMA\n\n\n  #Visceral Cavity Area\n  VCA_DAY <- ((UC_DAY-(pi*((USF_DAY/10)+(2*SISF_DAY/10)+(MBSF_DAY/10))/4))^2)/(4*pi)\n\n\n  #Visceral Cavity Area Percentage\n  VC_PCTG_DAY <- ((UC_DAY*10-(pi*((USF_DAY+2*SISF_DAY+MBSF_DAY)/4)))^2/(UC_DAY*10)^2)*100\n\n\n  #Impedence\n  Z_DAY <- ((X_DAY^2)+(R_DAY^2))^0.5\n\n  #Phase Angle\n  P_DAY <- (tan(X_DAY/R_DAY))*180/pi\n\n  #Arpadi Fat Free Mass\n  ARPADI_FFM_DAY <- ((3.474+(0.459*(HT_DAY^2/R_DAY))+(0.064*WT_DAY))/(0.769 -(0.009*AGE_DAY)-(0.016*SEX)))\n\n  #Goran Fat Free Mass\n  GORAN_FFM_DAY <- ((0.59*((HT_DAY^2)/R_DAY))+(0.065*WT_DAY)+0.04)/(0.769-(0.0025*AGE_DAY)-(0.019*SEX))\n\n  #ARPADI_TOTAL_BODY_WATER\n  ARPADI_TBW_DAY <- 0.725+((0.475*(HT_DAY^2))/R_DAY)+(0.14*WT_DAY)\n\n  #SCHAEFER_FAT_FREE_MASS\n  SCHAEFER_FFM_DAY <- (((0.65)*(HT_DAY^2))/(Z_DAY))+(0.68*AGE_DAY)+0.15\n\n  #KOTLER_FAT_FREE_MASS\n  KOTLER_FFM_DAY <- (0.88/22.22)*((HT_DAY^1.97)/(Z_DAY^0.49))+0.081*WT_DAY+0.07\n\n  #BODY_FAT_PERCENTAGE\n  FFM_DAY <- ifelse(AGE_DAY < 18, FFM_DAY <- SCHAEFER_FFM_DAY, FFM_DAY <- KOTLER_FFM_DAY)\n  #age <18 arpadi, >18 Kotler, what if age is equal to 18\n  BODY_FAT_PCTG_DAY <- ((WT_DAY-FFM_DAY)/WT_DAY)*100\n\n\n  #can run below to double check what has been calculated so far\n  #table <- cbind.data.frame(DATE, AGE_DAY, BMI_DAY, AMC_DAY, UAA_DAY, AMA_DAY, AFA_DAY, VCA_DAY, VC_PCTG_DAY, Z_DAY, P_DAY, ARPADI_FFM_DAY, GORAN_FFM_DAY, ARPADI_TBW_DAY, SCHAEFER_FFM_DAY, KOTLER_FFM_DAY, BODY_FAT_PCTG_DAY)\n\n\n\n  #Race for NHANES\n  RACE <- if (Demographics.Identified$RACE[1] == \"White\"){RACE <- 2} else if (Demographics.Identified$RACE[1] == \"Asian\"){RACE <- 2}  else if (Demographics.Identified$RACE[1] == \"African-American\"){RACE <- 1} else if (Demographics.Identified$RACE[1] == \"Hispanic\"){RACE <- 2}\n\n\n  #Gender for NHANES\n  SEX <- ifelse(Demographics.Identified$GENDER[1] == \"M\", 1, 2)\n\n  #newHT\n  HT <- floor(HT_DAY)\n  HT1 <- HT #for output table\n\n  #NHANES Interpolated\n\n\n\n  MEAN_NHANES_HT <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                  NHANES.References$AGE_YEAR_NHANES_HT_AGE==x &\n                                                                    NHANES.References$SEX_NHANES_HT_AGE==SEX &\n                                                                    NHANES.References$RACE_NHANES_HT_AGE==RACE,\n                                                                  select=c(\"MEAN_NHANES_HT_AGE\"))))\n\n  SD_NHANES_HT <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                NHANES.References$AGE_YEAR_NHANES_HT_AGE==x &\n                                                                  NHANES.References$SEX_NHANES_HT_AGE==SEX &\n                                                                  NHANES.References$RACE_NHANES_HT_AGE==RACE,\n                                                                select=c(\"SD_NHANES_HT_AGE\"))))\n\n  MEAN_NHANES_WT <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                  NHANES.References$AGE_YEAR_NHANES_WT_AGE==x &\n                                                                    NHANES.References$SEX_NHANES_WT_AGE==SEX &\n                                                                    NHANES.References$RACE_NHANES_WT_AGE==RACE,\n                                                                  select=c(\"MEAN_NHANES_WT_AGE\"))))\n\n  SD_NHANES_WT <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                NHANES.References$AGE_YEAR_NHANES_WT_AGE==x &\n                                                                  NHANES.References$SEX_NHANES_WT_AGE==SEX &\n                                                                  NHANES.References$RACE_NHANES_WT_AGE==RACE,\n                                                                select=c(\"SD_NHANES_WT_AGE\"))))\n\n  MEAN_NHANES_BMI <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                   NHANES.References$AGE_YEAR_NHANES_BMI_AGE==x &\n                                                                     NHANES.References$SEX_NHANES_BMI_AGE==SEX &\n                                                                     NHANES.References$RACE_NHANES_BMI_AGE==RACE,\n                                                                   select=c(\"MEAN_NHANES_BMI_AGE\"))))\n\n  SD_NHANES_BMI <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                 NHANES.References$AGE_YEAR_NHANES_BMI_AGE==x &\n                                                                   NHANES.References$SEX_NHANES_BMI_AGE==SEX &\n                                                                   NHANES.References$RACE_NHANES_BMI_AGE==RACE,\n                                                                 select=c(\"SD_NHANES_BMI_AGE\"))))\n\n  MEAN_NHANES_UAC <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                   NHANES.References$AGE_YEAR_NHANES_UAC_AGE==x &\n                                                                     NHANES.References$SEX_NHANES_UAC_AGE==SEX &\n                                                                     NHANES.References$RACE_NHANES_UAC_AGE==RACE,\n                                                                   select=c(\"MEAN_NHANES_UAC_AGE\"))))\n\n  SD_NHANES_UAC <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                 NHANES.References$AGE_YEAR_NHANES_UAC_AGE==x &\n                                                                   NHANES.References$SEX_NHANES_UAC_AGE==SEX &\n                                                                   NHANES.References$RACE_NHANES_UAC_AGE==RACE,\n                                                                 select=c(\"SD_NHANES_UAC_AGE\"))))\n\n  MEAN_NHANES_TSF <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                   NHANES.References$AGE_YEAR_NHANES_TSF_AGE==x &\n                                                                     NHANES.References$SEX_NHANES_TSF_AGE==SEX &\n                                                                     NHANES.References$RACE_NHANES_TSF_AGE==RACE,\n                                                                   select=c(\"MEAN_NHANES_TSF_AGE\"))))\n\n  SD_NHANES_TSF <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                 NHANES.References$AGE_YEAR_NHANES_TSF_AGE==x &\n                                                                   NHANES.References$SEX_NHANES_TSF_AGE==SEX &\n                                                                   NHANES.References$RACE_NHANES_TSF_AGE==RACE,\n                                                                 select=c(\"SD_NHANES_TSF_AGE\"))))\n\n  MEAN_NHANES_UAA <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                   NHANES.References$AGE_YEAR_NHANES_UAA_AGE==x &\n                                                                     NHANES.References$SEX_NHANES_UAA_AGE==SEX &\n                                                                     NHANES.References$RACE_NHANES_UAA_AGE==RACE,\n                                                                   select=c(\"MEAN_NHANES_UAA_AGE\"))))\n\n  SD_NHANES_UAA <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                 NHANES.References$AGE_YEAR_NHANES_UAA_AGE==x &\n                                                                   NHANES.References$SEX_NHANES_UAA_AGE==SEX &\n                                                                   NHANES.References$RACE_NHANES_UAA_AGE==RACE,\n                                                                 select=c(\"SD_NHANES_UAA_AGE\"))))\n\n  MEAN_NHANES_AMA <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                   NHANES.References$AGE_YEAR_NHANES_AMA_AGE==x &\n                                                                     NHANES.References$SEX_NHANES_AMA_AGE==SEX &\n                                                                     NHANES.References$RACE_NHANES_AMA_AGE==RACE,\n                                                                   select=c(\"MEAN_NHANES_AMA_AGE\"))))\n\n  SD_NHANES_AMA <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                 NHANES.References$AGE_YEAR_NHANES_AMA_AGE==x &\n                                                                   NHANES.References$SEX_NHANES_AMA_AGE==SEX &\n                                                                   NHANES.References$RACE_NHANES_AMA_AGE==RACE,\n                                                                 select=c(\"SD_NHANES_AMA_AGE\"))))\n\n  MEAN_NHANES_AFA <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                   NHANES.References$AGE_YEAR_NHANES_AFA_AGE==x &\n                                                                     NHANES.References$SEX_NHANES_AFA_AGE==SEX &\n                                                                     NHANES.References$RACE_NHANES_AFA_AGE==RACE,\n                                                                   select=c(\"MEAN_NHANES_AFA_AGE\"))))\n\n  SD_NHANES_AFA <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                 NHANES.References$AGE_YEAR_NHANES_AFA_AGE==x &\n                                                                   NHANES.References$SEX_NHANES_AFA_AGE==SEX &\n                                                                   NHANES.References$RACE_NHANES_AFA_AGE==RACE,\n                                                                 select=c(\"SD_NHANES_AFA_AGE\"))))\n\n  MEAN_NHANES_SSF <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                   NHANES.References$AGE_YEAR_NHANES_SSSF_AGE==x &\n                                                                     NHANES.References$SEX_NHANES_SSSF_AGE==SEX &\n                                                                     NHANES.References$RACE_NHANES_SSSF_AGE==RACE,\n                                                                   select=c(\"MEAN_NHANES_SSSF_AGE\"))))\n\n  SD_NHANES_SSF <- as.numeric(sapply(AGE_DAY, function(x) subset(NHANES.References,\n                                                                 NHANES.References$AGE_YEAR_NHANES_SSSF_AGE==x &\n                                                                   NHANES.References$SEX_NHANES_SSSF_AGE==SEX &\n                                                                   NHANES.References$RACE_NHANES_SSSF_AGE==RACE,\n                                                                 select=c(\"SD_NHANES_SSSF_AGE\"))))\n\n\n\n  MEAN_NHANES_WT_FOR_HT <- rep(NA,length(AGE_DAY))\n  SD_NHANES_WT_FOR_HT <- rep(NA,length(AGE_DAY))\n\n  num <- which((AGE_DAY < 12 & AGE_DAY >=2 & SEX==1) == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT1==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT1==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT1==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT1\"))))\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT1==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT1==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT1==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT1\"))))\n\n\n  num <- which((AGE_DAY >= 12 & AGE_DAY < 18 & SEX==1) == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT2==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT2==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT2==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT2\"))))\n\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT2==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT2==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT2==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT2\"))))\n\n  num <- which((AGE_DAY >= 18 & AGE_DAY < 75) == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT3==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT3==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT3==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT3\"))))\n\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT3==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT3==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT3==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT3\"))))\n\n\n  num <- which((AGE_DAY < 11 & AGE_DAY >= 2 & SEX == 2)  == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT1==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT1==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT1==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT1\"))))\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT1==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT1==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT1==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT1\"))))\n\n\n  num <- which((AGE_DAY >=11 & AGE_DAY < 18 & SEX==2) == TRUE)\n  MEAN_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                              NHANES.References$RACE_NHANES_WT_FOR_HT2==RACE &\n                                                                                NHANES.References$SEX_NHANES_WT_FOR_HT2==SEX &\n                                                                                NHANES.References$HEIGHT_NHANES_WT_FOR_HT2==x,\n                                                                              select=c(\"MEAN_NHANES_WT_FOR_HT2\"))))\n\n\n  SD_NHANES_WT_FOR_HT[num] <- as.numeric(sapply(HT[num], function(x) subset(NHANES.References,\n                                                                            NHANES.References$RACE_NHANES_WT_FOR_HT2==RACE &\n                                                                              NHANES.References$SEX_NHANES_WT_FOR_HT2==SEX &\n                                                                              NHANES.References$HEIGHT_NHANES_WT_FOR_HT2==x,\n                                                                            select=c(\"SD_NHANES_WT_FOR_HT2\"))))\n\n\n  #AND UC here\n\n  RACE <- if (Demographics.Identified$RACE[1] == \"White\"){RACE <- 2} else if (Demographics.Identified$RACE[1] == \"Asian\"){RACE <- 2}  else if (Demographics.Identified$RACE[1] == \"African-American\"){RACE <- 1} else if (Demographics.Identified$RACE[1] == \"Hispanic\"){RACE <- 3}\n  MEAN_NHANES_UC <- rep(NA,length(AGE_DAY))\n  SD_NHANES_UC <- rep(NA,length(AGE_DAY))\n  AGE_UC <- ifelse(AGE_DAY <= 4 | AGE_DAY >= 19, AGE_DAY, AGE_MO)\n  a <- which((AGE_DAY <= 4 | AGE_DAY >= 19) == TRUE)\n  MEAN_NHANES_UC[a] <- as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                       NHANES.References$AGE_YEAR_NHANES_UC_AGE==x &\n                                                                         NHANES.References$SEX_NHANES_UC_AGE==SEX &\n                                                                         NHANES.References$RACE_NHANES_UC_AGE==RACE,\n                                                                       select=c(\"MEAN_NHANES_UC_AGE\"))))\n\n\n  SD_NHANES_UC[a] <- as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                     NHANES.References$AGE_YEAR_NHANES_UC_AGE==x &\n                                                                       NHANES.References$SEX_NHANES_UC_AGE==SEX &\n                                                                       NHANES.References$RACE_NHANES_UC_AGE==RACE,\n                                                                     select=c(\"SD_NHANES_UC_AGE\"))))\n\n  L_NHANES_UC <- rep(NA,length(AGE_DAY))\n  M_NHANES_UC <- rep(NA,length(AGE_DAY))\n  S_NHANES_UC <- rep(NA,length(AGE_DAY))\n  a <- which((AGE_DAY <= 4 | AGE_DAY >= 19) == FALSE)\n  L_NHANES_UC[a] <- as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                    NHANES.References$AGE_MO_NHANES_UC_AGE==x &\n                                                                      NHANES.References$SEX_NHANES_UC_AGE2==SEX,\n                                                                    select=c(\"L_NHANES_UC\"))))\n\n  M_NHANES_UC[a] <- as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                    NHANES.References$AGE_MO_NHANES_UC_AGE==x &\n                                                                      NHANES.References$SEX_NHANES_UC_AGE2==SEX,\n                                                                    select=c(\"M_NHANES_UC\"))))\n\n  S_NHANES_UC[a] <-  as.numeric(sapply(AGE_UC[a], function(x) subset(NHANES.References,\n                                                                     NHANES.References$AGE_MO_NHANES_UC_AGE==x &\n                                                                       NHANES.References$SEX_NHANES_UC_AGE2==SEX,\n                                                                     select=c(\"S_NHANES_UC\"))))\n  #table2 <- cbind(AGE_DAY, MEAN_NHANES_SSF, SD_NHANES_SSF, MEAN_NHANES_AFA, SD_NHANES_AFA, MEAN_NHANES_AMA, SD_NHANES_AMA, MEAN_NHANES_BMI, SD_NHANES_BMI, MEAN_NHANES_HT, SD_NHANES_HT, MEAN_NHANES_TSF, SD_NHANES_TSF, MEAN_NHANES_UAC, SD_NHANES_UAC, MEAN_NHANES_UAA, SD_NHANES_UAA, MEAN_NHANES_UC, SD_NHANES_UC, MEAN_NHANES_WT, SD_NHANES_WT, MEAN_NHANES_WT_FOR_HT, SD_NHANES_WT_FOR_HT)\n\n\n  #NHANES Percentiles and Z scores\n\n  #NHANES_HEIGHT_Z_SCORE\n  NHANES_HT_Z_DAY <- (HT_DAY-MEAN_NHANES_HT)/SD_NHANES_HT\n\n  #NHANES_HEIGHT_PERCENTILE\n  NHANES_HT_PCTL_DAY <- (pnorm(NHANES_HT_Z_DAY))*100\n\n  #NHANES_WEIGHT_Z_SCORE\n  NHANES_WT_Z_DAY <- (WT_DAY-MEAN_NHANES_WT)/SD_NHANES_WT\n\n  #NHANES_WEIGHT_PERCENTILE\n  NHANES_WT_PCTL_DAY <- (pnorm(NHANES_WT_Z_DAY))*100\n\n  #NHANES_BMI_Z_SCORE\n  NHANES_BMI_Z_DAY <- (BMI_DAY-MEAN_NHANES_BMI)/SD_NHANES_BMI\n\n  #NHANES_BMI_PERCENTILE\n  NHANES_BMI_PCTL_DAY <- (pnorm(NHANES_BMI_Z_DAY))*100\n\n  #NHANES_SUBSCAPULAR_SKINFOLD_Z_SCORE\n  NHANES_SSF_Z_DAY <- (SSF_DAY-MEAN_NHANES_SSF)/SD_NHANES_SSF\n\n  #NHANES_SUBSCAPULAR_SKINFOLD_PERCENTILE\n  NHANES_SSF_PCTL_DAY <- (pnorm(NHANES_SSF_Z_DAY))*100\n\n  #NHANES_TRICEPS_SKINFOLD_Z_SCORE\n  NHANES_TSF_Z_DAY <- (TSF_DAY-MEAN_NHANES_TSF)/SD_NHANES_TSF\n\n  #NHANES_TRICEPS_SKINFOLD_PERCENTILE\n  NHANES_TSF_PCTL_DAY <- (pnorm(NHANES_TSF_Z_DAY))*100\n\n  #NHANES_UPPER_ARM_AREA_Z_SCORE\n  NHANES_UAA_Z_DAY <- (UAA_DAY-MEAN_NHANES_UAA)/SD_NHANES_UAA\n\n  #NHANES_UPPER_ARM_AREA_PERCENTILE\n  NHANES_UAA_PCTL_DAY <- (pnorm(NHANES_UAA_Z_DAY))*100\n\n  #NHANES_UPPER_ARM_CIRCUMFERANCE_Z_SCORE\n  NHANES_UAC_Z_DAY <- (UAC_DAY-MEAN_NHANES_UAC)/SD_NHANES_UAC\n\n  #NHANES_UPPER_ARM_CIRCUMFERANCE__PERCENTILE\n  NHANES_UAC_PCTL_DAY <- (pnorm(NHANES_UAC_Z_DAY))*100\n\n  #NHANES_UPPER_ARM_FAT_AREA_Z_SCORE\n  NHANES_AFA_Z_DAY <- (AFA_DAY-MEAN_NHANES_AFA)/SD_NHANES_AFA\n\n  #NHANES_UPPER_ARM_FAT_AREA_PERCENTILE\n  NHANES_AFA_PCTL_DAY <- (pnorm(NHANES_AFA_Z_DAY))*100\n\n  #NHANES_UPPER_ARM_MUSCLE_AREA_Z_SCORE\n  NHANES_AMA_Z_DAY <- (AMA_DAY-MEAN_NHANES_AMA)/SD_NHANES_AMA\n\n  #NHANES_UPPER_ARM_MUSCLE_AREA_PERCENTILE\n  NHANES_AMA_PCTL_DAY <- (pnorm(NHANES_AMA_Z_DAY))*100\n\n  #NHANES_WAIST_CIRCUMFERENCE_Z_SCORE\n  NHANES_UC_Z_DAY1 <- (((UC_DAY/M_NHANES_UC)^L_NHANES_UC)-1)/(L_NHANES_UC*S_NHANES_UC)\n  NHANES_UC_Z_DAY2 <- (UC_DAY-MEAN_NHANES_UC)/SD_NHANES_UC\n  NHANES_UC_Z_DAY1[is.na(NHANES_UC_Z_DAY1)] <- \" \"\n  NHANES_UC_Z_DAY2[is.na(NHANES_UC_Z_DAY2)] <- \" \"\n  NHANES_UC_Z_DAY <- as.numeric(paste(NHANES_UC_Z_DAY1, NHANES_UC_Z_DAY2))\n\n  #NHANES_WAIST_CIRCUMFERENCE_PERCENTILE\n  NHANES_UC_PCTL_DAY <- (pnorm(NHANES_UC_Z_DAY))*100\n\n  #NHANES_WEIGHT_FOR_HEIGHT_Z_SCORE\n  NHANES_WT_HT_Z_DAY <- (WT_DAY-MEAN_NHANES_WT_FOR_HT)/SD_NHANES_WT_FOR_HT\n\n  #NHANES_WEIGHT_FOR_HEIGHT_PERCENTILE\n  NHANES_WT_HT_PCTL_DAY <- (pnorm(NHANES_WT_HT_Z_DAY))*100\n\n\n\n  #for checking NHANES UC:\n  tab <- cbind(AGE_DAY, AGE_UC, UC_DAY, MEAN_NHANES_UC, SD_NHANES_UC, L_NHANES_UC, M_NHANES_UC, S_NHANES_UC, NHANES_UC_Z_DAY1, NHANES_UC_Z_DAY2, NHANES_UC_Z_DAY)\n\n  #table3 <- cbind(NHANES_HT_PCTL_DAY, NHANES_HT_Z_DAY, NHANES_WT_PCTL_DAY, NHANES_WT_Z_DAY, NHANES_BMI_PCTL_DAY, NHANES_BMI_Z_DAY, NHANES_UAC_PCTL_DAY, NHANES_UAC_Z_DAY, NHANES_TSF_PCTL_DAY, NHANES_TSF_Z_DAY, NHANES_UAA_PCTL_DAY, NHANES_UAA_Z_DAY, NHANES_AMA_PCTL_DAY, NHANES_AMA_Z_DAY, NHANES_AFA_PCTL_DAY, NHANES_AFA_Z_DAY, NHANES_SSF_PCTL_DAY, NHANES_SSF_Z_DAY, NHANES_UC_PCTL_DAY, NHANES_UC_Z_DAY, NHANES_WT_HT_Z_DAY, NHANES_WT_HT_PCTL_DAY)\n\n\n  #CDC R script\n\n  #same SEX as NHANES, need to calculate Age in months\n  i=1:dim(anthro_interpolation)[1]\n  Bday <- as.Date(Demographics.Identified$DOB[1], format= \"%m/%d/%Y\") #First convert classes from factor to date\n  span <- interval(Bday, DATE)\n  AGE_DAY <- as.period(span, \"months\")\n  AGE_DAY <- as.numeric(month(AGE_DAY))\n  #to remove unwanted variables\n  rm(i, Bday, span)\n\n\n  #CDC using apply function\n\n  L_CDC_WT <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                            CDC.References$AGE_MO_CDC_WT_AGE==x &\n                                                              CDC.References$SEX_CDC_WT_AGE==SEX,\n                                                            select=c(\"L_CDC_WT_AGE\"))))\n\n  M_CDC_WT <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                            CDC.References$AGE_MO_CDC_WT_AGE==x &\n                                                              CDC.References$SEX_CDC_WT_AGE==SEX,\n                                                            select=c(\"M_CDC_WT_AGE\"))))\n\n  S_CDC_WT <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                            CDC.References$AGE_MO_CDC_WT_AGE==x &\n                                                              CDC.References$SEX_CDC_WT_AGE==SEX,\n                                                            select=c(\"S_CDC_WT_AGE\"))))\n\n  L_CDC_HT <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                            CDC.References$AGE_MO_CDC_HT_AGE==x &\n                                                              CDC.References$SEX_CDC_HT_AGE==SEX,\n                                                            select=c(\"L_CDC_HT_AGE\"))))\n\n  M_CDC_HT <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                            CDC.References$AGE_MO_CDC_HT_AGE==x &\n                                                              CDC.References$SEX_CDC_HT_AGE==SEX,\n                                                            select=c(\"M_CDC_HT_AGE\"))))\n\n  S_CDC_HT <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                            CDC.References$AGE_MO_CDC_HT_AGE==x &\n                                                              CDC.References$SEX_CDC_HT_AGE==SEX,\n                                                            select=c(\"S_CDC_HT_AGE\"))))\n\n  L_CDC_BMI <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                             CDC.References$AGE_MO_CDC_BMI_AGE==x &\n                                                               CDC.References$SEX_CDC_BMI_AGE==SEX,\n                                                             select=c(\"L_CDC_BMI_AGE\"))))\n\n  M_CDC_BMI <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                             CDC.References$AGE_MO_CDC_BMI_AGE==x &\n                                                               CDC.References$SEX_CDC_BMI_AGE==SEX,\n                                                             select=c(\"M_CDC_BMI_AGE\"))))\n\n  S_CDC_BMI <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                             CDC.References$AGE_MO_CDC_BMI_AGE==x &\n                                                               CDC.References$SEX_CDC_BMI_AGE==SEX,\n                                                             select=c(\"S_CDC_BMI_AGE\"))))\n\n  L_CDC_WT_HT <- as.numeric(sapply(HT, function(x) subset(CDC.References,\n                                                          CDC.References$HEIGHT_CDC_WT_FOR_HT==x &\n                                                            CDC.References$SEX_CDC_WT_FOR_HT ==SEX,\n                                                          select=c(\"L_CDC_WT_FOR_HT\"))))\n\n  M_CDC_WT_HT <- as.numeric(sapply(HT, function(x) subset(CDC.References,\n                                                          CDC.References$HEIGHT_CDC_WT_FOR_HT==x &\n                                                            CDC.References$SEX_CDC_WT_FOR_HT ==SEX,\n                                                          select=c(\"M_CDC_WT_FOR_HT\"))))\n\n  S_CDC_WT_HT <- as.numeric(sapply(HT, function(x) subset(CDC.References,\n                                                          CDC.References$HEIGHT_CDC_WT_FOR_HT==x &\n                                                            CDC.References$SEX_CDC_WT_FOR_HT ==SEX,\n                                                          select=c(\"S_CDC_WT_FOR_HT\"))))\n\n  L_CDC_HC <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                            CDC.References$AGE_MO_CDC_HC_AGE==x &\n                                                              CDC.References$SEX_CDC_HC_AGE==SEX,\n                                                            select=c(\"L_CDC_HC_AGE\"))))\n\n  M_CDC_HC <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                            CDC.References$AGE_MO_CDC_HC_AGE==x &\n                                                              CDC.References$SEX_CDC_HC_AGE==SEX,\n                                                            select=c(\"M_CDC_HC_AGE\"))))\n\n  S_CDC_HC <- as.numeric(sapply(AGE_DAY, function(x) subset(CDC.References,\n                                                            CDC.References$AGE_MO_CDC_HC_AGE==x &\n                                                              CDC.References$SEX_CDC_HC_AGE==SEX,\n                                                            select=c(\"S_CDC_HC_AGE\"))))\n  #CDC_LMS <- cbind(AGE_DAY, L_CDC_HT, M_CDC_HT, S_CDC_HT, L_CDC_WT, M_CDC_WT, S_CDC_WT, L_CDC_BMI, M_CDC_BMI, S_CDC_BMI, L_CDC_WT_HT, M_CDC_WT_HT, S_CDC_WT_HT, L_CDC_HC, M_CDC_HC, S_CDC_HC)\n\n  #CDC_WEIGHT_FOR_HEIGHT_Z_SCORE\n  CDC_WT_HT_Z_DAY <- (((WT_DAY/M_CDC_WT_HT)^L_CDC_WT_HT)-1)/(L_CDC_WT_HT*S_CDC_WT_HT)\n\n  #CDC_WEIGHT_FOR_HEIGHT_PERCENTILE\n  CDC_WT_HT_PCTL_DAY <- (pnorm(CDC_WT_HT_Z_DAY))*100\n\n  #CDC_WEIGHT_Z_SCORE\n  CDC_WT_Z_DAY <- (((WT_DAY/M_CDC_WT)^L_CDC_WT)-1)/(L_CDC_WT*S_CDC_WT)\n\n  #CDC_WEIGHT_PERCENTILE\n  CDC_WT_PCTL_DAY <- (pnorm(CDC_WT_Z_DAY))*100\n\n  #CDC_BMI_Z_SCORE\n  CDC_BMI_Z_DAY <- (((BMI_DAY/M_CDC_BMI)^L_CDC_BMI)-1)/(L_CDC_BMI*S_CDC_BMI)\n\n  #CDC_BMI_PERCENTILE\n  CDC_BMI_PCTL_DAY <- (pnorm(CDC_BMI_Z_DAY))*100\n\n  #CDC_HEAD_CIRCUMFERENCE_Z_SCORE\n  CDC_HC_Z_DAY <- (((HC_DAY/M_CDC_HC)^L_CDC_HC)-1)/(L_CDC_HC*S_CDC_HC)\n\n  #CDC_HEAD_CIRCUMFERENCE_PERCENTILE\n  CDC_HC_PCTL_DAY <- (pnorm(CDC_HC_Z_DAY))*100\n\n  #CDC_HEIGHT_Z_SCORE\n  CDC_HT_Z_DAY <- (((HT_DAY/M_CDC_HT)^L_CDC_HT)-1)/(L_CDC_HT*S_CDC_HT)\n\n  #CDC_HEIGHT_PERCENTILE\n  CDC_HT_PCTL_DAY <- (pnorm(CDC_HT_Z_DAY))*100\n\n  #CDC_Z_AND_PCTL <- cbind(AGE_DAY, CDC_HT_Z_DAY, CDC_HT_PCTL_DAY, CDC_WT_Z_DAY, CDC_WT_PCTL_DAY, CDC_BMI_Z_DAY, CDC_BMI_PCTL_DAY, CDC_WT_HT_Z_DAY, CDC_WT_HT_PCTL_DAY, CDC_HC_Z_DAY, CDC_HC_PCTL_DAY)\n\n  #HT_DAY for WHO, because need to have HT to the nearest tenth\n  HT <- round(HT_DAY, digits=1)\n\n\n  #Calculating Age to use in WHO equations\n  i=1:dim(anthro_interpolation)[1]\n  Bday <- as.Date(Demographics.Identified$DOB[1], format= \"%m/%d/%Y\") #First convert classes from factor to date\n  span <- interval(Bday, DATE)\n  AGE_DOL2 <- as.period(span, \"days\")\n  AGE_DOL2 <- as.numeric(day(AGE_DOL2))\n  #to remove unwanted variables\n  rm(i, Bday, span)\n\n  #WHO\n\n\n  L_WHO_HC <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_HC_AGE==x &\n                                                               WHO.References$SEX_WHO_HC_AGE==SEX,\n                                                             select = c(\"L_WHO_HC_AGE\"))))\n\n  M_WHO_HC <- as.numeric(sapply(AGE_DOL2, function (x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_HC_AGE==x &\n                                                                WHO.References$SEX_WHO_HC_AGE==SEX,\n                                                              select = c(\"M_WHO_HC_AGE\"))))\n\n  S_WHO_HC <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                             WHO.References$AGE_DAY_WHO_HC_AGE==x &\n                                                               WHO.References$SEX_WHO_HC_AGE==SEX,\n                                                             select = c(\"S_WHO_HC_AGE\"))))\n\n  L_WHO_SSF <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_SSF_AGE==x &\n                                                                WHO.References$SEX_WHO_SSF_AGE==SEX,\n                                                              select=c(\"L_WHO_SSF_AGE\"))))\n\n  M_WHO_SSF <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_SSF_AGE==x &\n                                                                WHO.References$SEX_WHO_SSF_AGE==SEX,\n                                                              select=c(\"M_WHO_SSF_AGE\"))))\n\n\n  S_WHO_SSF <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_SSF_AGE==x &\n                                                                WHO.References$SEX_WHO_SSF_AGE==SEX,\n                                                              select=c(\"S_WHO_SSF_AGE\"))))\n\n  L_WHO_TSF <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_TSF_AGE==x &\n                                                                WHO.References$SEX_WHO_TSF_AGE==SEX,\n                                                              select=c(\"L_WHO_TSF_AGE\"))))\n\n\n  M_WHO_TSF <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_TSF_AGE==x &\n                                                                WHO.References$SEX_WHO_TSF_AGE==SEX,\n                                                              select=c(\"M_WHO_TSF_AGE\"))))\n\n  S_WHO_TSF <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_TSF_AGE==x &\n                                                                WHO.References$SEX_WHO_TSF_AGE==SEX,\n                                                              select=c(\"S_WHO_TSF_AGE\"))))\n\n  L_WHO_UAC <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_UAC_AGE==x &\n                                                                WHO.References$SEX_WHO_UAC_AGE==SEX,\n                                                              select=c(\"L_WHO_UAC_AGE\"))))\n\n  M_WHO_UAC <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_UAC_AGE==x &\n                                                                WHO.References$SEX_WHO_UAC_AGE==SEX,\n                                                              select=c(\"M_WHO_UAC_AGE\"))))\n\n  S_WHO_UAC <- as.numeric(sapply(AGE_DOL2, function(x) subset(WHO.References,\n                                                              WHO.References$AGE_DAY_WHO_UAC_AGE==x &\n                                                                WHO.References$SEX_WHO_UAC_AGE==SEX,\n                                                              select=c(\"S_WHO_UAC_AGE\"))))\n\n\n\n\n  L_WHO_WT_HT <- as.numeric(sapply(HT, function(x) subset(WHO.References,\n                                                          WHO.References$HEIGHT_WHO_WT_FOR_HT==x &\n                                                            WHO.References$SEX_WHO_WT_FOR_HT==SEX,\n                                                          select=c(\"L_WHO_WT_FOR_HT\"))))\n\n  M_WHO_WT_HT <- as.numeric(sapply(HT, function(x) subset(WHO.References,\n                                                          WHO.References$HEIGHT_WHO_WT_FOR_HT==x &\n                                                            WHO.References$SEX_WHO_WT_FOR_HT==SEX,\n                                                          select=c(\"M_WHO_WT_FOR_HT\"))))\n\n\n  S_WHO_WT_HT <- as.numeric(sapply(HT, function(x) subset(WHO.References,\n                                                          WHO.References$HEIGHT_WHO_WT_FOR_HT==x &\n                                                            WHO.References$SEX_WHO_WT_FOR_HT==SEX,\n                                                          select=c(\"S_WHO_WT_FOR_HT\"))))\n\n  L_WHO_HT <- rep(NA, length(AGE_DAY))\n  M_WHO_HT <- rep(NA, length(AGE_DAY))\n  S_WHO_HT <- rep(NA, length(AGE_DAY))\n  L_WHO_WT <- rep(NA, length(AGE_DAY))\n  M_WHO_WT <- rep(NA, length(AGE_DAY))\n  S_WHO_WT <- rep(NA, length(AGE_DAY))\n  L_WHO_BMI <- rep(NA, length(AGE_DAY))\n  M_WHO_BMI <- rep(NA, length(AGE_DAY))\n  S_WHO_BMI <- rep(NA, length(AGE_DAY))\n\n  AGE_WHO <- ifelse(AGE_DOL2 <= 1856 , AGE_DOL2, AGE_DAY)\n  t <- which((AGE_DOL2 <= 1856) == TRUE)\n  L_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE2==SEX,\n                                                                  select=c(\"L_WHO_HT_AGE2\"))))\n  M_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE2==SEX,\n                                                                  select=c(\"M_WHO_HT_AGE2\"))))\n  S_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE2==SEX,\n                                                                  select=c(\"S_WHO_HT_AGE2\"))))\n\n  L_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE2==SEX,\n                                                                  select=c(\"L_WHO_WT_AGE2\"))))\n  M_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE2==SEX,\n                                                                  select=c(\"M_WHO_WT_AGE2\"))))\n  S_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_DAY_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE2==SEX,\n                                                                  select=c(\"S_WHO_WT_AGE2\"))))\n\n  L_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_DAY_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE2==SEX,\n                                                                   select=c(\"L_WHO_BMI_AGE2\"))))\n  M_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_DAY_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE2==SEX,\n                                                                   select=c(\"M_WHO_BMI_AGE2\"))))\n  S_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_DAY_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE2==SEX,\n                                                                   select=c(\"S_WHO_BMI_AGE2\"))))\n\n\n  t <- which((AGE_DOL2 <= 1856)==FALSE)\n  L_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE==SEX,\n                                                                  select=c(\"L_WHO_HT_AGE\"))))\n  M_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE==SEX,\n                                                                  select=c(\"M_WHO_HT_AGE\"))))\n  S_WHO_HT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_HT_AGE==x &\n                                                                    WHO.References$SEX_WHO_HT_AGE==SEX,\n                                                                  select=c(\"S_WHO_HT_AGE\"))))\n\n  L_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE==SEX,\n                                                                  select=c(\"L_WHO_WT_AGE\"))))\n  M_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE==SEX,\n                                                                  select=c(\"M_WHO_WT_AGE\"))))\n  S_WHO_WT[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                  WHO.References$AGE_MO_WHO_WT_AGE==x &\n                                                                    WHO.References$SEX_WHO_WT_AGE==SEX,\n                                                                  select=c(\"S_WHO_WT_AGE\"))))\n\n\n  L_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_MO_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE==SEX,\n                                                                   select=c(\"L_WHO_BMI_AGE\"))))\n  M_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_MO_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE==SEX,\n                                                                   select=c(\"M_WHO_BMI_AGE\"))))\n  S_WHO_BMI[t] <- as.numeric(sapply(AGE_WHO[t], function(x) subset(WHO.References,\n                                                                   WHO.References$AGE_MO_WHO_BMI_AGE==x &\n                                                                     WHO.References$SEX_WHO_BMI_AGE==SEX,\n                                                                   select=c(\"S_WHO_BMI_AGE\"))))\n\n\n  #WHO_LMS <- cbind(AGE_DAY, L_WHO_HT, M_WHO_HT, S_WHO_HT, L_WHO_WT, M_WHO_WT, S_WHO_WT, L_WHO_BMI, M_WHO_BMI, S_WHO_BMI, L_WHO_HC, M_WHO_HC, S_WHO_HC, L_WHO_UAC, M_WHO_UAC, S_WHO_UAC, L_WHO_TSF, M_WHO_TSF, S_WHO_TSF, L_WHO_SSF, M_WHO_SSF, S_WHO_SSF, L_WHO_WT_HT, M_WHO_WT_HT, S_WHO_WT_HT)\n\n\n  #WHO_WEIGHT_Z_SCORE\n  WHO_WT_Z_DAY <- (((WT_DAY/M_WHO_WT)^L_WHO_WT)-1)/(L_WHO_WT*S_WHO_WT)\n\n  #WHO_WEIGHT_PERCENTILE\n  WHO_WT_PCTL_DAY <- (pnorm(WHO_WT_Z_DAY))*100\n\n  #WHO_BMI_Z_SCORE\n  WHO_BMI_Z_DAY <- (((BMI_DAY/M_WHO_BMI)^L_WHO_BMI)-1)/(L_WHO_BMI*S_WHO_BMI)\n\n  #WHO_BMI_PERCENTILE\n  WHO_BMI_PCTL_DAY <- (pnorm(WHO_BMI_Z_DAY))*100\n\n  #WHO_HEAD_CIRCUMFERENCE_Z_SCORE\n  WHO_HC_Z_DAY <- (((HC_DAY/M_WHO_HC)^L_WHO_HC)-1)/(L_WHO_HC*S_WHO_HC)\n\n  #WHO_HEAD_CIRCUMFERENCE_PERCENTILE\n  WHO_HC_PCTL_DAY <- (pnorm(WHO_HC_Z_DAY))*100\n\n  #WHO_HEIGHT_Z_SCORE\n  WHO_HT_Z_DAY <- (((HT_DAY/M_WHO_HT)^L_WHO_HT)-1)/(L_WHO_HT*S_WHO_HT)\n\n\n  #WHO_HEIGHT_PERCENTILE\n  WHO_HT_PCTL_DAY <- (pnorm(WHO_HT_Z_DAY))*100\n\n  #WHO_SUBSCAPULAR_SKINFOLD_Z_SCORE\n  WHO_SSF_Z_DAY <- (((SSF_DAY/M_WHO_SSF)^L_WHO_SSF)-1)/(L_WHO_SSF*S_WHO_SSF)\n\n  #WHO_SUBSCAPULAR_SKINFOLD_PERCENTILE\n  WHO_SSF_PCTL_DAY <- (pnorm(WHO_SSF_Z_DAY))*100\n\n  #WHO_TRICEPS_SKINFOLD_Z_SCORE\n  WHO_TSF_Z_DAY <- (((TSF_DAY/M_WHO_TSF)^L_WHO_TSF)-1)/(L_WHO_TSF*S_WHO_TSF)\n\n  #WHO_TRICEPS_SKINFOLD_PERCENTILE\n  WHO_TSF_PCTL_DAY <- (pnorm(WHO_TSF_Z_DAY))*100\n\n  #WHO_UPPER_ARM_CIRCUMFERANCE_Z_SCORE\n  WHO_UAC_Z_DAY <- (((UAC_DAY/M_WHO_UAC)^L_WHO_UAC)-1)/(L_WHO_UAC*S_WHO_UAC)\n\n  #WHO_UPPER_ARM_CIRCUMFERANCE__PERCENTILE\n  WHO_UAC_PCTL_DAY <- (pnorm(WHO_UAC_Z_DAY))*100\n\n  #WHO_WEIGHT_FOR_HEIGHT_Z_SCORE\n  WHO_WT_HT_Z_DAY <- (((WT_DAY/M_WHO_WT_HT)^L_WHO_WT_HT)-1)/(L_WHO_WT_HT*S_WHO_WT_HT)\n\n  #WHO_WEIGHT_FOR_HEIGHT_PERCENTILE\n  WHO_WT_HT_PCTL_DAY <- (pnorm(WHO_WT_HT_Z_DAY))*100\n\n  #WHO_Z_AND_PCTL <- cbind(WHO_HT_PCTL_DAY, WHO_HT_Z_DAY, WHO_WT_PCTL_DAY, WHO_WT_Z_DAY, WHO_BMI_PCTL_DAY, WHO_BMI_Z_DAY, WHO_WT_HT_PCTL_DAY, WHO_WT_HT_Z_DAY, WHO_HC_PCTL_DAY, WHO_HC_Z_DAY, WHO_UAC_PCTL_DAY, WHO_UAC_Z_DAY, WHO_TSF_PCTL_DAY, WHO_TSF_Z_DAY, WHO_SSF_PCTL_DAY, WHO_SSF_Z_DAY)\n\n  #Gator Circle\n  GC_DAY <- (NHANES_UC_Z_DAY* VC_PCTG_DAY)/100\n\n\n\n  #finaltable <- cbind.data.frame(MRNUMBER, DATE, DAY_TYPE, SOURCE, HT, WT, HC, UAC, TSF, SSF, USF, SISF, MBSF, UC, R, X, CDC_HT_PCTL, CDC_HT_Z, WHO_HT_PCTL, WHO_HT_Z, NHANES_HT_PCTL, NHANES_HT_Z, CDC_WT_PCTL, CDC_WT_Z, WHO_WT_PCTL, WHO_WT_Z, NHANES_WT_PCTL, NHANES_WT_Z, BMI,  CDC_BMI_PCTL, CDC_BMI_Z, WHO_BMI_PCTL, WHO_BMI_Z, NHANES_BMI_PCTL, NHANES_BMI_Z, CDC_WT_HT_PCTL, CDC_WT_HT_Z, WHO_WT_HT_PCTL, WHO_WT_HT_Z, NHANES_WT_HT_PCTL, NHANES_WT_HT_Z, CDC_HC_PCTL, CDC_HC_Z, WHO_HC_PCTL, WHO_HC_Z, WHO_UAC_PCTL, WHO_UAC_Z, NHANES_UAC_PCTL, NHANES_UAC_Z, WHO_TSF_PCTL, WHO_TSF_Z, NHANES_TSF_PCTL, NHANES_TSF_Z, UAA, NHANES_UAA_PCTL, NHANES_UAA_Z, AMC, AMA, NHANES_AMA_PCTL, NHANES_AMA_Z, AFA, NHANES_AFA_PCTL, NHANES_AFA_Z, WHO_SSF_PCTL, WHO_SSF_Z, NHANES_SSF_PCTL, NHANES_SSF_Z, NHANES_UC_PCTL, NHANES_UC_Z, VCA, VC_PCTG, GC, Z, P, ARPADI_FFM, GORAN_FFM, SCHAEFER_FFM, KOTLER_FFM, BODY_FAT_PCTG, HT_DAY, WT_DAY, HC_DAY, UAC_DAY, TSF_DAY, SSF_DAY, USF_DAY, SISF_DAY, MBSF_DAY, UC_DAY, R_DAY, X_DAY, CDC_HT_PCTL_DAY, CDC_HT_Z_DAY, WHO_HT_PCTL_DAY, WHO_HT_Z_DAY, NHANES_HT_PCTL_DAY, NHANES_HT_Z_DAY, CDC_WT_PCTL_DAY, CDC_WT_Z_DAY, WHO_WT_PCTL_DAY, WHO_WT_Z_DAY, NHANES_WT_PCTL_DAY, NHANES_WT_Z_DAY, BMI_DAY, CDC_BMI_PCTL_DAY, CDC_BMI_Z_DAY, WHO_BMI_PCTL_DAY, WHO_BMI_Z_DAY, NHANES_BMI_PCTL_DAY, NHANES_BMI_Z_DAY, CDC_WT_HT_PCTL_DAY, CDC_WT_HT_Z_DAY, WHO_WT_HT_PCTL_DAY, WHO_WT_HT_Z_DAY, NHANES_WT_HT_PCTL_DAY, NHANES_WT_HT_Z_DAY, CDC_HC_PCTL_DAY, CDC_HC_Z_DAY, WHO_HC_PCTL_DAY, WHO_HC_Z_DAY, WHO_UAC_PCTL_DAY, WHO_UAC_Z_DAY, NHANES_UAC_PCTL_DAY, NHANES_UAC_Z_DAY, WHO_TSF_PCTL_DAY, WHO_TSF_Z_DAY, NHANES_TSF_PCTL_DAY, NHANES_TSF_Z_DAY, UAA_DAY, NHANES_UAA_PCTL_DAY, NHANES_UAA_Z_DAY, AMC_DAY, AMA_DAY, NHANES_AMA_PCTL_DAY, NHANES_AMA_Z_DAY, AFA_DAY, NHANES_AFA_PCTL_DAY, NHANES_AFA_Z_DAY, WHO_SSF_PCTL_DAY, WHO_SSF_Z_DAY, NHANES_SSF_PCTL_DAY, NHANES_SSF_Z_DAY, NHANES_UC_PCTL_DAY, NHANES_UC_Z_DAY, VCA_DAY, VC_PCTG_DAY, GC_DAY, Z_DAY, P_DAY, ARPADI_FFM_DAY, GORAN_FFM_DAY, ARPADI_TBW_DAY, SCHAEFER_FFM_DAY, KOTLER_FFM_DAY, BODY_FAT_PCTG_DAY)\n  output2 <- cbind.data.frame(DATE1, AGE_DAY1,AGE_DOL1, AGE_MO, RACE, SEX, HT1, MEAN_NHANES_SSF, SD_NHANES_SSF, MEAN_NHANES_AFA, SD_NHANES_AFA, MEAN_NHANES_AMA, SD_NHANES_AMA, MEAN_NHANES_BMI, SD_NHANES_BMI, MEAN_NHANES_HT, SD_NHANES_HT, MEAN_NHANES_TSF, SD_NHANES_TSF, MEAN_NHANES_UAC, SD_NHANES_UAC, MEAN_NHANES_UAA, SD_NHANES_UAA, MEAN_NHANES_UC, SD_NHANES_UC, L_NHANES_UC, M_NHANES_UC, S_NHANES_UC, MEAN_NHANES_WT, SD_NHANES_WT, MEAN_NHANES_WT_FOR_HT, SD_NHANES_WT_FOR_HT,\n                              L_CDC_HT, M_CDC_HT, S_CDC_HT, L_CDC_WT, M_CDC_WT, S_CDC_WT, L_CDC_BMI, M_CDC_BMI, S_CDC_BMI, L_CDC_WT_HT, M_CDC_WT_HT, S_CDC_WT_HT, L_CDC_HC, M_CDC_HC, S_CDC_HC,\n                              L_WHO_HT, M_WHO_HT, S_WHO_HT, L_WHO_WT, M_WHO_WT, S_WHO_WT,L_WHO_BMI, M_WHO_BMI, S_WHO_BMI,L_WHO_HC, M_WHO_HC, S_WHO_HC, L_WHO_UAC, M_WHO_UAC, S_WHO_UAC, L_WHO_TSF, M_WHO_TSF, S_WHO_TSF, L_WHO_SSF, M_WHO_SSF, S_WHO_SSF, L_WHO_WT_HT, M_WHO_WT_HT, S_WHO_WT_HT\n  )\n\n  interpolatedtable <- cbind.data.frame(DATE, HT_DAY, WT_DAY, HC_DAY, UAC_DAY, TSF_DAY, SSF_DAY, USF_DAY, SISF_DAY, MBSF_DAY, UC_DAY, R_DAY, X_DAY, CDC_HT_PCTL_DAY, CDC_HT_Z_DAY, WHO_HT_PCTL_DAY, WHO_HT_Z_DAY, NHANES_HT_PCTL_DAY, NHANES_HT_Z_DAY, CDC_WT_PCTL_DAY, CDC_WT_Z_DAY, WHO_WT_PCTL_DAY, WHO_WT_Z_DAY, NHANES_WT_PCTL_DAY, NHANES_WT_Z_DAY, BMI_DAY, CDC_BMI_PCTL_DAY, CDC_BMI_Z_DAY, WHO_BMI_PCTL_DAY, WHO_BMI_Z_DAY, NHANES_BMI_PCTL_DAY, NHANES_BMI_Z_DAY, CDC_WT_HT_PCTL_DAY, CDC_WT_HT_Z_DAY, WHO_WT_HT_PCTL_DAY, WHO_WT_HT_Z_DAY, NHANES_WT_HT_PCTL_DAY, NHANES_WT_HT_Z_DAY, CDC_HC_PCTL_DAY, CDC_HC_Z_DAY, WHO_HC_PCTL_DAY, WHO_HC_Z_DAY, WHO_UAC_PCTL_DAY, WHO_UAC_Z_DAY, NHANES_UAC_PCTL_DAY, NHANES_UAC_Z_DAY, WHO_TSF_PCTL_DAY, WHO_TSF_Z_DAY, NHANES_TSF_PCTL_DAY, NHANES_TSF_Z_DAY, UAA_DAY, NHANES_UAA_PCTL_DAY, NHANES_UAA_Z_DAY, AMC_DAY, AMA_DAY, NHANES_AMA_PCTL_DAY, NHANES_AMA_Z_DAY, AFA_DAY, NHANES_AFA_PCTL_DAY, NHANES_AFA_Z_DAY, WHO_SSF_PCTL_DAY, WHO_SSF_Z_DAY, NHANES_SSF_PCTL_DAY, NHANES_SSF_Z_DAY, NHANES_UC_PCTL_DAY, NHANES_UC_Z_DAY, VCA_DAY, VC_PCTG_DAY, GC_DAY, Z_DAY, P_DAY, ARPADI_FFM_DAY, GORAN_FFM_DAY, ARPADI_TBW_DAY, SCHAEFER_FFM_DAY, KOTLER_FFM_DAY, BODY_FAT_PCTG_DAY)\n\n\n\n  finaltable <- merge(anthrotable, interpolatedtable, by=c('DATE'), all.x=TRUE, all.y=TRUE)\n\n\n\n  #for AGE in the final excel table\n  Bday <- as.Date(Demographics.Identified$DOB, format= \"%m/%d/%Y\")\n  DATE <- finaltable$DATE\n  span <- interval(Bday, DATE)\n  AGE <- time_length(span, \"year\")\n  AGE <- floor(AGE*10)/10\n\n  finaltable$SOURCE[which(is.na(finaltable$SOURCE))] <- 4\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n\n\n  day1 <- as.Date(Demographics.Identified$PKT_INITIATED_DATE)\n  lastday <- as.Date(Demographics.Identified$PKT_STOPPED_DATE)\n\n  #before first day\n  sub1 <- finaltable$DATE < day1\n  a <- finaltable$DAY_TYPE[sub1]\n  finaltable$DAY_TYPE[sub1] <- ifelse(is.na(a), 3, a)\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n  a <- ifelse(is.na(a), 3, a)\n  finaltable$DAY_TYPE[sub1] <- ifelse(a!=1 & a!=4, 3, a)\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n\n\n  #next\n  sub2 <- finaltable$DATE >= day1\n  b <- finaltable$DAY_TYPE[sub2]\n  finaltable$DAY_TYPE[sub2] <- ifelse(is.na(b), 2, b)\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n  b <- ifelse(is.na(b), 2, b)\n  finaltable$DAY_TYPE[sub2] <- ifelse(b!=1 & b!=4, 2, b)\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n\n\n  if (is.na(lastday)) {\n    c <- 'NA'\n  } else if (!(is.na(lastday))) {\n    sub3 <- finaltable$DATE > lastday\n    c <- finaltable$DAY_TYPE[sub3]\n    finaltable$DAY_TYPE[sub3] <- 3\n    assign('finaltable',finaltable,envir=.GlobalEnv)\n  }\n\n\n\n  #for CP and PA\n  #CP\n  finaltable$CP_DAY <- c(NA, finaltable$CP_DAY[!is.na(finaltable$CP_DAY)])[cumsum(!is.na(finaltable$CP_DAY)) + 1]\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n\n\n  #PA\n  Bday <- as.Date(Demographics.Identified$DOB, format= \"%m/%d/%Y\") #First convert classes from factor to date\n  span <- interval(Bday, finaltable$DATE)\n  AGE_DAY <- as.period(span)\n  AGE_DAY <- as.numeric(year(AGE_DAY))\n  #to remove unwanted variables\n  rm(Bday, span)\n\n  if (all(is.na(finaltable$PA_DAY)) == FALSE) {\n    sub <- AGE_DAY < 3\n    finaltable$PA_DAY[sub] <- NA\n    assign('finaltable',finaltable,envir=.GlobalEnv)\n\n    a <- which(!is.na(finaltable$PA_DAY))[1]\n    b <- finaltable$PA_DAY[a]\n    sub2 <- AGE_DAY > 2\n    sub2 <- sub2[1:a-1]\n    finaltable$PA_DAY[1:a-1] <- ifelse(sub2==TRUE, b, finaltable$PA_DAY)\n    assign('finaltable',finaltable,envir=.GlobalEnv)\n\n    c <- which((!is.na(finaltable$PA_DAY) & AGE_DAY > 18)==TRUE)[1]\n    if (!is.na(c)) {\n      d <- finaltable$PA_DAY[c]\n      sub3 <- AGE_DAY > 18\n      sub3 <- sub3[1:c-1]\n      finaltable$PA_DAY[1:c-1] <- ifelse(sub3==TRUE, d, finaltable$PA_DAY)\n      assign('finaltable',finaltable,envir=.GlobalEnv)\n    }\n\n    finaltable$PA_DAY <- c(NA, finaltable$PA_DAY[!is.na(finaltable$PA_DAY)])[cumsum(!is.na(finaltable$PA_DAY)) + 1]\n    assign('finaltable',finaltable,envir=.GlobalEnv)\n  }\n\n  #final\n  z <- dim(finaltable)[1]\n  finaltable$MRNUMBER <- rep.int(finaltable$MRNUMBER[1], z)\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n  finaltable <- finaltable[ , c(2, 1, 3:ncol(finaltable)) ]\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n  finaltable <- finaltable[, c(1:82, 84:ncol(finaltable), 83)] #putting comments at the end of the table\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n  finaltable <- as.data.frame(append(finaltable, list(AGE = AGE), after=4))\n  assign('finaltable',finaltable,envir=.GlobalEnv)\n\n  setwd(directory)\n\n  observe_load <- FALSE\n  print(\"Would you like to save a temporary file for checking reference values?\")\n  print(\"Type 'yes' to save a file to look at, type 'no' to move onto next step\")\n  rl <- \" \"\n  while(tolower(rl)!=\"yes\" && tolower(rl)!=\"no\") {\n    rl <- readline(prompt=\"Enter here: \")\n  }\n  if(tolower(rl==\"yes\")) {\n    observe_load <- TRUE\n  }\n\n  if (observe_load == TRUE) {\n    print(paste(\"Saving file as\",gsub(\" \",\"\",paste(patient,\"_ANTHROPOMETRICS_REFERENCE.xlsx\")),\"in directory\",directory))\n    xlsx <- \"ANTHROPOMETRICS_REFERENCE.xlsx\"\n    xlsx <- gsub(\" \",\"\", paste(patient,\"_\", xlsx))\n    write.xlsx2(output,file=xlsx,row.names=FALSE, showNA=FALSE)\n\n    options(java.parameters = \"-Xmx10000m\")\n    print(paste(\"Saving file as\",gsub(\" \",\"\",paste(patient,\"_ANTHROPOMETRICS_REFERENCE_DAY.xlsx\")),\"in directory\",directory))\n    xlsx <- \"ANTHROPOMETRICS_REFERENCE_DAY.xlsx\"\n    xlsx <- gsub(\" \",\"\", paste(patient,\"_\", xlsx))\n    write.xlsx2(output2,file=xlsx,row.names=FALSE, showNA=FALSE)\n\n  }\n  varsToCheck <- c(\"CDC_HT_Z\",\"WHO_HT_Z\",\"NHANES_HT_Z\",\"CDC_WT_Z\",\"WHO_WT_Z\",\"NHANES_WT_Z\",\"CDC_BMI_Z\",\"WHO_BMI_Z\",\"NHANES_BMI_Z\",\"CDC_WT_HT_Z\",\"WHO_WT_HT_Z\",\"NHANES_WT_HT_Z\",\"CDC_HC_Z\",\"WHO_HC_Z\",\"WHO_UAC_Z\",\"NHANES_UAC_Z\",\"WHO_TSF_Z\",\"NHANES_TSF_Z\",\"NHANES_UAA_Z\",\"NHANES_AMA_Z\",\"NHANES_AFA_Z\",\"WHO_SSF_Z\",\"NHANES_SSF_Z\",\"NHANES_UC_Z\")\n  zmin = -5\n  zmax = 3\n\n  n <- nrow(finaltable)*length(varsToCheck);\n  anthropometricsCheck <- data.frame(MRNUMBER = integer(n),DATE, FLAG_COLUMN = character(n), Z_SCORE = numeric(n), stringsAsFactors = FALSE)\n  DATE<-as.Date(anthropometricsCheck$DATE,format=\"%m/%d/%Y\")\n\n  for(rowIdx in 1:nrow(finaltable)){\n    flags = 0;\n    if (finaltable[rowIdx,which(colnames(finaltable)==\"SOURCE\")]!=4){\n      for (colIdx in 1:length(varsToCheck)){\n        colVarID = which(colnames(finaltable)==varsToCheck[colIdx])\n        if (!is.na(finaltable[rowIdx,colVarID]<=zmin)){\n          if ((finaltable[rowIdx,colVarID]<=zmin)||(finaltable[rowIdx,colVarID]>=zmax)){\n            # copy mr#, date, and flagged data columns that falls outside of range into excel sheet\n            flags = flags+1;\n            anthropometricsCheck$MRNUMBER[flags] <- finaltable[rowIdx,1]\n            anthropometricsCheck$DATE[flags] <- finaltable[rowIdx,2]\n            anthropometricsCheck$FLAG_COLUMN[flags] <- varsToCheck[colIdx]\n            anthropometricsCheck$Z_SCORE[flags] <- finaltable[rowIdx,colVarID]\n          }\n        }\n      }\n    }\n  }\n\n  anthropometricsCheck[anthropometricsCheck==0]<-NA\n  na.omit(anthropometricsCheck)\n\n  observe_load <- FALSE\n  print(\"Would you like to save a temporary file for checking if there is a data flag?\")\n  print(\"Type 'yes' to save a file to look at, type 'no' to move onto next step\")\n  rl <- \" \"\n  while(tolower(rl)!=\"yes\" && tolower(rl)!=\"no\") {\n    rl <- readline(prompt=\"Enter here: \")\n  }\n  if(tolower(rl==\"yes\")) {\n    observe_load <- TRUE\n  }\n\n  if (observe_load == TRUE) {\n\n    # write Jurate's special excel document if there is a data flag\n  xlsx <- \"ANTHROPOMETRICS_CHECK.xlsx\"\n  xlsx <- gsub(\" \",\"\", paste(patient,\"_\", xlsx))\n  write.xlsx2(anthropometricsCheck,file=xlsx,row.names=FALSE, showNA=FALSE)\n  print(paste(\"Saving anthropometric check as\",gsub(\" \",\"\",paste(patient,\"_ANTHROPOMETRICS_CHECK.xlsx\")),\"in directory\",getwd()))\n\n\n  }\n\n  print(paste(\"Saving anthropometric clinical data as\",gsub(\" \",\"\",paste(patient,\"_ANTHROPOMETRICS_CLINICAL.xlsx\")),\"in directory\",getwd()))\n\n  options(java.parameters = \"-Xmx10000m\")\n  #finaltable <- as.data.frame.numeric(finaltable)\n  #finaltable[is.na(finaltable)] <- \" \"\n  xlsx <- \"ANTHROPOMETRICS_CLINICAL.xlsx\"\n  xlsx <- gsub(\" \",\"\", paste(patient,\"_\", xlsx))\n  write.xlsx2(finaltable,file=xlsx,row.names=FALSE, showNA=FALSE)\n\n  if (anyNA(Demographics.Identified$STRATA) == FALSE) {\n  anthrograph(finaltable)\n  }\n\n  print(\"Would you like to upload anthropometrics data into a MySQL database?\")\n  print(\"Type 'YES' to do so, else type 'NO'\")\n  rl <- \" \"\n  while (tolower(rl)!=\"yes\" && tolower(rl)!=\"no\") {\n    rl <- readline(prompt=\"Enter here: \")\n  }\n  if (tolower(rl)==\"yes\") {\n    finaltable<-subset(finaltable,select=-c(AGE,COMMENTS))\n    uploadanthros(finaltable)\n  }\n\n  #to remove variables in environment so that you can move onto next patient\n  objs <- ls(pos = \".GlobalEnv\")\n  rm(list=objs, pos= \".GlobalEnv\")\n\n}\n\n",
    "created" : 1474477394904.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2712732570",
    "id" : "9543A11D",
    "lastKnownWriteTime" : 1475692026,
    "last_content_update" : 1475692026455,
    "path" : "G:/MySQL Database/Anthropometrics/Anthropometrics R Package/borumanthro/R/calculate_anthro function.R",
    "project_path" : "R/calculate_anthro function.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}